using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Telegram.Api.TL;
using Telegram.Api.TL.Methods.Channels;
using Telegram.Api.TL.Methods.Contacts;
using Windows.Foundation;

namespace Telegram.Api.Services
{
    public partial interface IMTProtoService
    {
        IAsyncOperation<MTProtoResponse<T>> SendRequestAsync<T>(string caption, TLObject obj);

        IAsyncOperation<MTProtoResponse<bool>> ClearSavedInfoAsync(bool info, bool credentials);
        IAsyncOperation<MTProtoResponse<TLPaymentsPaymentForm>> GetPaymentFormAsync(int msgId);
        IAsyncOperation<MTProtoResponse<TLPaymentsPaymentReceipt>> GetPaymentReceiptAsync(int msgId);
        IAsyncOperation<MTProtoResponse<TLPaymentsSavedInfo>> GetSavedInfoAsync();
        IAsyncOperation<MTProtoResponse<TLPaymentsPaymentResultBase>> SendPaymentFormAsync(int msgId, string infoId, string optionId, TLInputPaymentCredentialsBase credentials);
        IAsyncOperation<MTProtoResponse<TLPaymentsValidatedRequestedInfo>> ValidateRequestedInfoAsync(int msgId, TLPaymentRequestedInfo info, bool save);

        IAsyncOperation<MTProtoResponse<TLAccountTmpPassword>> GetTmpPasswordAsync(byte[] hash, int period);

        IAsyncOperation<MTProtoResponse<TLVector<TLStickerSetCoveredBase>>> GetAttachedStickersAsync(TLInputStickeredMediaBase media);

        IAsyncOperation<MTProtoResponse<TLPhonePhoneCall>> AcceptCallAsync(TLInputPhoneCall peer, byte[] gb);
        IAsyncOperation<MTProtoResponse<TLPhonePhoneCall>> ConfirmCallAsync(TLInputPhoneCall peer, byte[] ga, long fingerprint);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> DiscardCallAsync(TLInputPhoneCall peer, int duration, TLPhoneCallDiscardReasonBase reason, long connectionId);
        IAsyncOperation<MTProtoResponse<TLDataJSON>> GetCallConfigAsync();
        IAsyncOperation<MTProtoResponse<bool>> ReceivedCallAsync(TLInputPhoneCall peer);
        IAsyncOperation<MTProtoResponse<TLPhonePhoneCall>> RequestCallAsync(TLInputUserBase userId, int randomId, byte[] gaHash);
        IAsyncOperation<MTProtoResponse<bool>> SaveCallDebugAsync(TLInputPhoneCall peer, TLDataJSON debug);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> SetCallRatingAsync(TLInputPhoneCall peer, int rating, string comment);

        IAsyncOperation<MTProtoResponse<TLMessagesChatsBase>> GetCommonChatsAsync(TLInputUserBase id, int maxId, int limit);
        IAsyncOperation<MTProtoResponse<TLMessagesChatsBase>> GetAdminedPublicChannelsAsync();
        IAsyncOperation<MTProtoResponse<TLAuthSentCode>> SendCodeAsync(string phoneNumber, bool? currentNumber, Action<int> attemptFailed = null);
        IAsyncOperation<MTProtoResponse<TLMessagesRecentStickersBase>> GetRecentStickersAsync(bool attached, int hash);
        IAsyncOperation<MTProtoResponse<TLMessagesAffectedMessages>> ReadMessageContentsAsync(TLVector<int> id);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> JoinChannelAsync(TLChannel channel);
        IAsyncOperation<MTProtoResponse<TLMessagesBotCallbackAnswer>> GetBotCallbackAnswerAsync(TLInputPeerBase peer, int messageId, byte[] data, bool game);
        IAsyncOperation<MTProtoResponse<TLMessagesAffectedMessages>> DeleteMessagesAsync(TLVector<int> id, bool revoke);
        IAsyncOperation<MTProtoResponse<TLHelpTermsOfService>> GetTermsOfServiceAsync(string langCode);
        IAsyncOperation<MTProtoResponse<TLChannelsChannelParticipant>> GetParticipantAsync(TLInputChannelBase inputChannel, TLInputUserBase userId);
        IAsyncOperation<MTProtoResponse<TLMessagesMessagesBase>> GetMessagesAsync(TLInputChannelBase inputChannel, TLVector<int> id);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> AddChatUserAsync(int chatId, TLInputUserBase userId, int fwdLimit);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> ForwardMessagesAsync(TLInputPeerBase toPeer, TLInputPeerBase fromPeer, TLVector<int> id, IList<TLMessage> messages, bool withMyScore);
        IAsyncOperation<MTProtoResponse<bool>> ReorderStickerSetsAsync(bool masks, TLVector<long> order);
        IAsyncOperation<MTProtoResponse<TLMessage>> SendInlineBotResultAsync(TLMessage message, Action fastCallback);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> GetAllDraftsAsync();
        IAsyncOperation<MTProtoResponse<TLAccountPrivacyRules>> GetPrivacyAsync(TLInputPrivacyKeyBase key);
        IAsyncOperation<MTProtoResponse<TLNearestDC>> GetNearestDCAsync();
        IAsyncOperation<MTProtoResponse<TLMessagesAffectedMessages>> ReadHistoryAsync(TLInputPeerBase peer, int maxId, int offset);
        IAsyncOperation<MTProtoResponse<TLAccountPasswordSettings>> GetPasswordSettingsAsync(byte[] currentPasswordHash);
        IAsyncOperation<MTProtoResponse<TLMessagesAffectedHistory>> DeleteUserHistoryAsync(TLChannel channel, TLInputUserBase userId);
        IAsyncOperation<MTProtoResponse<TLExportedMessageLink>> ExportMessageLinkAsync(TLInputChannelBase channel, int id);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> EditAdminAsync(TLChannel channel, TLInputUserBase userId, TLChannelParticipantRoleBase role);
        IAsyncOperation<MTProtoResponse<TLPeerSettings>> GetPeerSettingsAsync(TLInputPeerBase peer);
        IAsyncOperation<MTProtoResponse<TLMessagesStickerSet>> GetStickerSetAsync(TLInputStickerSetBase stickerset);
        IAsyncOperation<MTProtoResponse<bool>> SaveGifAsync(TLInputDocumentBase id, bool unsave);
        IAsyncOperation<MTProtoResponse<TLHelpSupport>> GetSupportAsync();
        IAsyncOperation<MTProtoResponse<TLMessagesDHConfig>> GetDHConfigAsync(int version, int randomLength);
        IAsyncOperation<MTProtoResponse<bool>> ResetNotifySettingsAsync();
        IAsyncOperation<MTProtoResponse<bool>> UnblockAsync(TLInputUserBase id);
        IAsyncOperation<MTProtoResponse<bool>> SetTypingAsync(TLInputPeerBase peer, TLSendMessageActionBase action);
        IAsyncOperation<MTProtoResponse<TLUpdatesDifferenceBase>> GetDifferenceWithoutUpdatesAsync(int pts, int date, int qts);
        IAsyncOperation<MTProtoResponse<bool>> UpdatePasswordSettingsAsync(byte[] currentPasswordHash, TLAccountPasswordInputSettings newSettings);
        IAsyncOperation<MTProtoResponse<bool>> ReadHistoryAsync(TLChannel channel, int maxId);
        IAsyncOperation<MTProtoResponse<TLContactsTopPeersBase>> GetTopPeersAsync(TLContactsGetTopPeersFlag flags, int offset, int limit, int hash);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> EditChatTitleAsync(int chatId, string title);
        IAsyncOperation<MTProtoResponse<bool>> CheckUsernameAsync(string username);
        IAsyncOperation<MTProtoResponse<bool>> ResetAuthorizationsAsync();
        IAsyncOperation<MTProtoResponse<TLPhotosPhotosBase>> GetUserPhotosAsync(TLInputUserBase userId, int offset, long maxId, int limit);
        IAsyncOperation<MTProtoResponse<TLPhotosPhoto>> UploadProfilePhotoAsync(TLInputFile file);
        IAsyncOperation<MTProtoResponse<bool>> UpdateNotifySettingsAsync(TLInputNotifyPeerBase peer, TLInputPeerNotifySettings settings);
        IAsyncOperation<MTProtoResponse<TLUploadFile>> GetFileAsync(int dcId, TLInputFileLocationBase location, int offset, int limit);
        IAsyncOperation<MTProtoResponse<TLUserBase>> UpdateProfileAsync(string firstName, string lastName, string about);
        IAsyncOperation<MTProtoResponse<TLContactsImportedContacts>> ImportContactsAsync(TLVector<TLInputContactBase> contacts, bool replace);
        IAsyncOperation<MTProtoResponse<bool>> SetTypingAsync(TLInputPeerBase peer, bool typing);
        IAsyncOperation<MTProtoResponse<bool>> RegisterDeviceAsync(int tokenType, string token);
        IAsyncOperation<MTProtoResponse<bool>> LogOutAsync();
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> ToggleSignaturesAsync(TLInputChannelBase channel, bool enabled);
        IAsyncOperation<MTProtoResponse<TLChannelsChannelParticipants>> GetParticipantsAsync(TLInputChannelBase inputChannel, TLChannelParticipantsFilterBase filter, int offset, int limit);
        IAsyncOperation<MTProtoResponse<TLMessagesMessagesBase>> GetChannelHistoryAsync(string debugInfo, TLInputPeerBase inputPeer, TLPeerBase peer, bool sync, int offset, int maxId, int limit);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> DeleteChatUserAsync(int chatId, TLInputUserBase userId);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> ForwardMessageAsync(TLInputPeerBase peer, int fwdMessageId, TLMessage message);
        IAsyncOperation<MTProtoResponse<TLMessagesMessagesBase>> SearchGlobalAsync(string query, int offsetDate, TLInputPeerBase offsetPeer, int offsetId, int limit);
        IAsyncOperation<MTProtoResponse<TLMessagesFoundGifs>> SearchGifsAsync(string q, int offset);
        IAsyncOperation<MTProtoResponse<TLMessagesBotResults>> GetInlineBotResultsAsync(TLInputUserBase bot, TLInputPeerBase peer, TLInputGeoPointBase geoPoint, string query, string offset);
        IAsyncOperation<MTProtoResponse<TLMessagesFeaturedStickersBase>> GetFeaturedStickersAsync(int hash);
        IAsyncOperation<MTProtoResponse<TLVector<TLUserBase>>> GetUsersAsync(TLVector<TLInputUserBase> id);
        IAsyncOperation<MTProtoResponse<bool>> UnregisterDeviceAsync(int tokenType, string token);
        IAsyncOperation<MTProtoResponse<bool>> ConfirmPhoneAsync(string phoneCodeHash, string phoneCode);
        IAsyncOperation<MTProtoResponse<bool>> UpdateUsernameAsync(TLInputChannelBase channel, string username);
        IAsyncOperation<MTProtoResponse<TLMessagesStickerSetInstallResultBase>> InstallStickerSetAsync(TLInputStickerSetBase stickerset, bool archived);
        IAsyncOperation<MTProtoResponse<TLChatInviteBase>> CheckChatInviteAsync(string hash);
        IAsyncOperation<MTProtoResponse<TLDocumentBase>> GetDocumentByHashAsync(byte[] sha256, int size, string mimeType);
        IAsyncOperation<MTProtoResponse<bool>> SaveDraftAsync(TLInputPeerBase peer, TLDraftMessageBase draft);
        IAsyncOperation<MTProtoResponse<TLUserProfilePhotoBase>> UpdateProfilePhotoAsync(TLInputPhotoBase id);
        IAsyncOperation<MTProtoResponse<TLVector<long>>> DeletePhotosAsync(TLVector<TLInputPhotoBase> id);
        IAsyncOperation<MTProtoResponse<TLContactsBlockedBase>> GetBlockedAsync(int offset, int limit);
        IAsyncOperation<MTProtoResponse<TLContactsContactsBase>> GetContactsAsync(string hash);
        IAsyncOperation<MTProtoResponse<TLUserFull>> GetFullUserAsync(TLInputUserBase id);
        IAsyncOperation<MTProtoResponse<TLUpdatesDifferenceBase>> GetDifferenceAsync(int pts, int date, int qts);
        IAsyncOperation<MTProtoResponse<TLAuthAuthorization>> CheckPasswordAsync(byte[] passwordHash);
        IAsyncOperation<MTProtoResponse<bool>> ResetTopPeerRatingAsync(TLTopPeerCategoryBase category, TLInputPeerBase peer);
        IAsyncOperation<MTProtoResponse<TLMessageMediaBase>> GetWebPagePreviewAsync(string message);
        IAsyncOperation<MTProtoResponse<TLWebPageBase>> GetWebPageAsync(string url, int hash);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> EditChatPhotoAsync(int chatId, TLInputChatPhotoBase photo);
        IAsyncOperation<MTProtoResponse<TLUserBase>> UpdateUsernameAsync(string username);
        IAsyncOperation<MTProtoResponse<TLAuthSentCode>> SendConfirmPhoneCodeAsync(string hash, bool currentNumber);
        IAsyncOperation<MTProtoResponse<bool>> EditAboutAsync(TLChannel channel, string about);
        IAsyncOperation<MTProtoResponse<bool>> ClearRecentStickersAsync(bool attached);
        IAsyncOperation<MTProtoResponse<bool>> HideReportSpamAsync(TLInputPeerBase peer);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> ImportChatInviteAsync(string hash);
        IAsyncOperation<MTProtoResponse<TLAuthSentCode>> SendChangePhoneCodeAsync(string phoneNumber, bool? currentNumber);
        IAsyncOperation<MTProtoResponse<TLAccountPrivacyRules>> SetPrivacyAsync(TLInputPrivacyKeyBase key, TLVector<TLInputPrivacyRuleBase> rules);
        IAsyncOperation<MTProtoResponse<bool>> SetAccountTTLAsync(TLAccountDaysTTL ttl);
        IAsyncOperation<MTProtoResponse<TLContactsFound>> SearchAsync(string q, int limit);
        IAsyncOperation<MTProtoResponse<TLMessagesChatFull>> GetFullChatAsync(int chatId);
        IAsyncOperation<MTProtoResponse<TLMessagesChatFull>> UpdateChannelAsync(int? channelId);
        IAsyncOperation<MTProtoResponse<TLExportedChatInviteBase>> ExportChatInviteAsync(int chatId);
        IAsyncOperation<MTProtoResponse<bool>> ReportSpamAsync(TLInputPeerBase peer);
        IAsyncOperation<MTProtoResponse<TLUpdatesState>> GetStateAsync();
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> GetAppChangelogAsync(string prevAppVersion);
        IAsyncOperation<MTProtoResponse<TLAuthPasswordRecovery>> RequestPasswordRecoveryAsync();
        IAsyncOperation<MTProtoResponse<TLAccountPasswordBase>> GetPasswordAsync();
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> UpdatePinnedMessageAsync(bool silent, TLInputChannelBase channel, int id);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> EditPhotoAsync(TLChannel channel, TLInputChatPhotoBase photo);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> KickFromChannelAsync(TLChannel channel, TLInputUserBase userId, bool kicked);
        IAsyncOperation<MTProtoResponse<TLMessage>> SendMessageAsync(TLMessage message, Action fastCallback);
        IAsyncOperation<MTProtoResponse<TLPong>> PingAsync(long pingId);
        IAsyncOperation<MTProtoResponse<TLMessagesMessagesBase>> GetHistoryAsync(TLInputPeerBase inputPeer, TLPeerBase peer, bool sync, int offset, int offsetDate, int maxId, int limit);
        IAsyncOperation<MTProtoResponse<bool>> ResetAuthorizationAsync(long hash);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> MigrateChatAsync(int chatId);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> EditMessageAsync(TLInputPeerBase peer, int id, string message, TLVector<TLMessageEntityBase> entities, TLReplyMarkupBase replyMarkup, bool noWebPage);
        IAsyncOperation<MTProtoResponse<TLMessagesAffectedMessages>> DeleteMessagesAsync(TLInputChannelBase channel, TLVector<int> id);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> CreateChannelAsync(TLChannelsCreateChannelFlag flags, string title, string about);
        IAsyncOperation<MTProtoResponse<TLMessagesMessagesBase>> GetMessagesAsync(TLVector<int> id);
        IAsyncOperation<MTProtoResponse<bool>> CancelCodeAsync(string phoneNumber, string phoneCodeHash);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> EditTitleAsync(TLChannel channel, string title);
        IAsyncOperation<MTProtoResponse<bool>> UninstallStickerSetAsync(TLInputStickerSetBase stickerset);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> CreateChatAsync(TLVector<TLInputUserBase> users, string title);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> StartBotAsync(TLInputUserBase bot, string startParam, TLMessage message);
        IAsyncOperation<MTProtoResponse<TLMessagesAffectedHistory>> DeleteHistoryAsync(bool justClear, TLInputPeerBase peer, int maxId);
        IAsyncOperation<MTProtoResponse<TLAccountAuthorizations>> GetAuthorizationsAsync();
        IAsyncOperation<MTProtoResponse<bool>> EditChatAdminAsync(int chatId, TLInputUserBase userId, bool isAdmin);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> InviteToChannelAsync(TLInputChannelBase channel, TLVector<TLInputUserBase> users);
        IAsyncOperation<MTProtoResponse<TLMessagesArchivedStickers>> GetArchivedStickersAsync(long offsetId, int limit, bool masks);
        IAsyncOperation<MTProtoResponse<bool>> UpdateDeviceLockedAsync(int period);
        IAsyncOperation<MTProtoResponse<TLContactsLink>> DeleteContactAsync(TLInputUserBase id);
        IAsyncOperation<MTProtoResponse<TLMessagesDialogsBase>> GetDialogsAsync(int offsetDate, int offsetId, TLInputPeerBase offsetPeer, int limit);
        IAsyncOperation<MTProtoResponse<bool>> ReportPeerAsync(TLInputPeerBase peer, TLReportReasonBase reason);
        IAsyncOperation<MTProtoResponse<bool>> ReportSpamAsync(TLInputChannelBase channel, TLInputUserBase userId, TLVector<int> id);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> ToggleInvitesAsync(TLInputChannelBase channel, bool enabled);
        IAsyncOperation<MTProtoResponse<TLExportedChatInviteBase>> ExportInviteAsync(TLInputChannelBase channel);
        IAsyncOperation<MTProtoResponse<bool>> SaveBigFilePartAsync(long fileId, int filePart, int fileTotalParts, byte[] bytes);
        IAsyncOperation<MTProtoResponse<bool>> UpdateStatusAsync(bool offline);
        IAsyncOperation<MTProtoResponse<bool>> BlockAsync(TLInputUserBase id);
        IAsyncOperation<MTProtoResponse<TLAuthAuthorization>> SignUpAsync(string phoneNumber, string phoneCodeHash, string phoneCode, string firstName, string lastName);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> ToggleChatAdminsAsync(int chatId, bool enabled);
        IAsyncOperation<MTProtoResponse<TLMessagesMessageEditData>> GetMessageEditDataAsync(TLInputPeerBase peer, int id);
        IAsyncOperation<MTProtoResponse<bool>> CheckUsernameAsync(TLInputChannelBase channel, string username);
        IAsyncOperation<MTProtoResponse<TLMessagesChatFull>> GetFullChannelAsync(TLInputChannelBase channel);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> DeleteChannelAsync(TLChannel channel);
        IAsyncOperation<MTProtoResponse<TLMessagesPeerDialogs>> GetPeerDialogsAsync(TLVector<TLInputPeerBase> peers);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> SendMediaAsync(TLInputPeerBase inputPeer, TLInputMediaBase inputMedia, TLMessage message);
        IAsyncOperation<MTProtoResponse<TLMessagesSavedGifsBase>> GetSavedGifsAsync(int hash);
        IAsyncOperation<MTProtoResponse<bool>> SetInlineBotResultsAsync(bool gallery, bool pr, long queryId, TLVector<TLInputBotInlineResultBase> results, int cacheTime, string nextOffset, TLInlineBotSwitchPM switchPM);
        IAsyncOperation<MTProtoResponse<bool>> ReadFeaturedStickersAsync(TLVector<long> id);
        IAsyncOperation<MTProtoResponse<TLMessagesAllStickersBase>> GetAllStickersAsync(int hash);
        IAsyncOperation<MTProtoResponse<TLVector<TLWallPaperBase>>> GetWallpapersAsync();
        IAsyncOperation<MTProtoResponse<TLContactsResolvedPeer>> ResolveUsernameAsync(string username);
        IAsyncOperation<MTProtoResponse<TLAccountDaysTTL>> GetAccountTTLAsync();
        IAsyncOperation<MTProtoResponse<TLPong>> PingDelayDisconnectAsync(long pingId, int disconnectDelay);
        IAsyncOperation<MTProtoResponse<TLUploadFile>> GetFileAsync(TLInputFileLocationBase location, int offset, int limit);
        IAsyncOperation<MTProtoResponse<TLMessagesMessagesBase>> SearchAsync(TLInputPeerBase peer, string query, TLMessagesFilterBase filter, int minDate, int maxDate, int offset, int maxId, int limit);
        IAsyncOperation<MTProtoResponse<bool>> DeleteAccountAsync(string reason);
        IAsyncOperation<MTProtoResponse<TLUpdatesChannelDifferenceBase>> GetChannelDifferenceAsync(TLInputChannelBase inputChannel, TLChannelMessagesFilterBase filter, int pts, int limit);
        IAsyncOperation<MTProtoResponse<TLUpdatesBase>> LeaveChannelAsync(TLChannel channel);
        IAsyncOperation<MTProtoResponse<TLUserBase>> ChangePhoneAsync(string phoneNumber, string phoneCodeHash, string phoneCode);
        IAsyncOperation<MTProtoResponse<TLVector<TLContactStatus>>> GetStatusesAsync();
        IAsyncOperation<MTProtoResponse<bool>> DeleteAccountTTLAsync(string reason);
        IAsyncOperation<MTProtoResponse<TLPeerNotifySettingsBase>> GetNotifySettingsAsync(TLInputNotifyPeerBase peer);
        IAsyncOperation<MTProtoResponse<bool>> SaveFilePartAsync(long fileId, int filePart, byte[] bytes);
        IAsyncOperation<MTProtoResponse<TLAuthAuthorization>> SignInAsync(string phoneNumber, string phoneCodeHash, string phoneCode);
        IAsyncOperation<MTProtoResponse<TLAuthAuthorization>> RecoverPasswordAsync(string code);
        IAsyncOperation<MTProtoResponse<TLAuthSentCode>> ResendCodeAsync(string phoneNumber, string phoneCodeHash);
        IAsyncOperation<MTProtoResponse<bool>> ToggleDialogPinAsync(TLInputPeerBase peer, bool pin);
        IAsyncOperation<MTProtoResponse<bool>> ReorderPinnedDialogsAsync(TLVector<TLInputPeerBase> order, bool force);
    }
}
