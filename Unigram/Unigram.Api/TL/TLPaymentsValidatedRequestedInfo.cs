// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLPaymentsValidatedRequestedInfo : ITLObject, TLPaymentsValidatedRequestedInfo 
	{
		public bool HasId { get { return Flags.HasFlag(TLPaymentsValidatedRequestedInfoFlag.Id); } set { Flags = value ? (Flags | TLPaymentsValidatedRequestedInfoFlag.Id) : (Flags & ~TLPaymentsValidatedRequestedInfoFlag.Id); } }
		public bool HasShippingOptions { get { return Flags.HasFlag(TLPaymentsValidatedRequestedInfoFlag.ShippingOptions); } set { Flags = value ? (Flags | TLPaymentsValidatedRequestedInfoFlag.ShippingOptions) : (Flags & ~TLPaymentsValidatedRequestedInfoFlag.ShippingOptions); } }

		public TLPaymentsValidatedRequestedInfoFlag Flags { get; set; }
		public String Id { get; set; }
		public TLVector<TLShippingOption> ShippingOptions { get; set; }

		public ITLPaymentsValidatedRequestedInfo() { }
		public ITLPaymentsValidatedRequestedInfo(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.PaymentsValidatedRequestedInfo; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLPaymentsValidatedRequestedInfoFlag)from.ReadInt32();
			if (HasId) Id = from.ReadString();
			if (HasShippingOptions) ShippingOptions = TLFactory.Read<TLVector<TLShippingOption>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0xD1451883);
			to.Write((Int32)Flags);
			if (HasId) to.Write(Id);
			if (HasShippingOptions) to.WriteObject(ShippingOptions);
		}

		private void UpdateFlags()
		{
			HasId = Id != null;
			HasShippingOptions = ShippingOptions != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLPaymentsValidatedRequestedInfoFlag : Int32
	{
		Id = (1 << 0),
		ShippingOptions = (1 << 1),
	}
#endif

#if !PORTABLE
	[Guid(0x84e640ac, 0x9265, 0x4ea0, 0xb5, 0xa9, 0xce, 0xfc, 0x7f, 0x40, 0x1e, 0xdb)]
	public partial interface TLPaymentsValidatedRequestedInfo : TLObject
	{
		bool HasId { get; set; }
		bool HasShippingOptions { get; set; }

		TLPaymentsValidatedRequestedInfoFlag Flags { get; set; }
		String Id { get; set; }
		TLVector<TLShippingOption> ShippingOptions { get; set; }
	}
#endif

}