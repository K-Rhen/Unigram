// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLClientDHInnerData : ITLObject, TLClientDHInnerData 
	{
		public TLInt128 Nonce { get; set; }
		public TLInt128 ServerNonce { get; set; }
		public Int64 RetryId { get; set; }
		public Byte[] GB { get; set; }

		public ITLClientDHInnerData() { }
		public ITLClientDHInnerData(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.ClientDHInnerData; } }

		public override void Read(TLBinaryReader from)
		{
			Nonce = TLFactory.Read<TLInt128>(from);
			ServerNonce = TLFactory.Read<TLInt128>(from);
			RetryId = from.ReadInt64();
			GB = from.ReadByteArray();
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x6643B654);
			to.WriteObject(Nonce);
			to.WriteObject(ServerNonce);
			to.Write(RetryId);
			to.WriteByteArray(GB);
		}
	}

#if !PORTABLE
	[Guid(0xdec2aad7, 0x0b1c, 0x4064, 0xd1, 0xda, 0xa8, 0xe8, 0x55, 0x0a, 0xe4, 0x06)]
	public partial interface TLClientDHInnerData : TLObject
	{
		TLInt128 Nonce { get; set; }
		TLInt128 ServerNonce { get; set; }
		Int64 RetryId { get; set; }
		Byte[] GB { get; set; }
	}
#endif

}