// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLUpdateBotShippingQuery : ITLUpdateBase, TLUpdateBotShippingQuery 
	{
		public Int64 QueryId { get; set; }
		public Int32 UserId { get; set; }
		public Byte[] Payload { get; set; }
		public TLPostAddress ShippingAddress { get; set; }

		public ITLUpdateBotShippingQuery() { }
		public ITLUpdateBotShippingQuery(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.UpdateBotShippingQuery; } }

		public override void Read(TLBinaryReader from)
		{
			QueryId = from.ReadInt64();
			UserId = from.ReadInt32();
			Payload = from.ReadByteArray();
			ShippingAddress = TLFactory.Read<TLPostAddress>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0xE0CDC940);
			to.Write(QueryId);
			to.Write(UserId);
			to.WriteByteArray(Payload);
			to.WriteObject(ShippingAddress);
		}
	}

#if !PORTABLE
	[Guid(0x8340c33a, 0x292f, 0x15c1, 0x38, 0xfb, 0xe2, 0xd6, 0xf7, 0x5e, 0x8b, 0xcc)]
	public partial interface TLUpdateBotShippingQuery : TLUpdateBase
	{
		Int64 QueryId { get; set; }
		Int32 UserId { get; set; }
		Byte[] Payload { get; set; }
		TLPostAddress ShippingAddress { get; set; }
	}
#endif

}