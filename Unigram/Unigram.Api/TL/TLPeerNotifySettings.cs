// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLPeerNotifySettings : ITLPeerNotifySettingsBase, TLPeerNotifySettings 
	{
		public bool IsShowPreviews { get { return Flags.HasFlag(TLPeerNotifySettingsFlag.ShowPreviews); } set { Flags = value ? (Flags | TLPeerNotifySettingsFlag.ShowPreviews) : (Flags & ~TLPeerNotifySettingsFlag.ShowPreviews); } }
		public bool IsSilent { get { return Flags.HasFlag(TLPeerNotifySettingsFlag.Silent); } set { Flags = value ? (Flags | TLPeerNotifySettingsFlag.Silent) : (Flags & ~TLPeerNotifySettingsFlag.Silent); } }

		public TLPeerNotifySettingsFlag Flags { get; set; }
		public Int32 MuteUntil { get; set; }
		public String Sound { get; set; }

		public ITLPeerNotifySettings() { }
		public ITLPeerNotifySettings(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.PeerNotifySettings; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLPeerNotifySettingsFlag)from.ReadInt32();
			MuteUntil = from.ReadInt32();
			Sound = from.ReadString();
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x9ACDA4C0);
			to.Write((Int32)Flags);
			to.Write(MuteUntil);
			to.Write(Sound);
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLPeerNotifySettingsFlag : Int32
	{
		ShowPreviews = (1 << 0),
		Silent = (1 << 1),
	}
#endif

#if !PORTABLE
	[Guid(0x79d0067e, 0xcc94, 0x732c, 0xe1, 0xa3, 0x1e, 0x85, 0x8f, 0x5a, 0xc5, 0x11)]
	public partial interface TLPeerNotifySettings : TLPeerNotifySettingsBase
	{
		bool IsShowPreviews { get; set; }
		bool IsSilent { get; set; }

		TLPeerNotifySettingsFlag Flags { get; set; }
		Int32 MuteUntil { get; set; }
		String Sound { get; set; }
	}
#endif

}