// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLPhotosPhotosSlice : ITLPhotosPhotosBase, TLPhotosPhotosSlice 
	{
		public Int32 Count { get; set; }

		public ITLPhotosPhotosSlice() { }
		public ITLPhotosPhotosSlice(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.PhotosPhotosSlice; } }

		public override void Read(TLBinaryReader from)
		{
			Count = from.ReadInt32();
			Photos = TLFactory.Read<TLVector<TLPhotoBase>>(from);
			Users = TLFactory.Read<TLVector<TLUserBase>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x15051F54);
			to.Write(Count);
			to.WriteObject(Photos);
			to.WriteObject(Users);
		}
	}

#if !PORTABLE
	[Guid(0x8335b493, 0xab83, 0x0b9d, 0x64, 0xe5, 0x2e, 0xe3, 0xf9, 0xee, 0x78, 0x18)]
	public partial interface TLPhotosPhotosSlice : TLPhotosPhotosBase
	{
		Int32 Count { get; set; }
		TLVector<TLPhotoBase> Photos { get; set; }
		TLVector<TLUserBase> Users { get; set; }
	}
#endif

}