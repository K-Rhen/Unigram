// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLPeerSettings : ITLObject, TLPeerSettings 
	{
		public bool IsReportSpam { get { return Flags.HasFlag(TLPeerSettingsFlag.ReportSpam); } set { Flags = value ? (Flags | TLPeerSettingsFlag.ReportSpam) : (Flags & ~TLPeerSettingsFlag.ReportSpam); } }

		public TLPeerSettingsFlag Flags { get; set; }

		public ITLPeerSettings() { }
		public ITLPeerSettings(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.PeerSettings; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLPeerSettingsFlag)from.ReadInt32();
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x818426CD);
			to.Write((Int32)Flags);
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLPeerSettingsFlag : Int32
	{
		ReportSpam = (1 << 0),
	}
#endif

#if !PORTABLE
	[Guid(0x97b2e995, 0x2ab0, 0x9205, 0x14, 0x88, 0xc4, 0xdb, 0x9c, 0x4c, 0x98, 0xda)]
	public partial interface TLPeerSettings : TLObject
	{
		bool IsReportSpam { get; set; }

		TLPeerSettingsFlag Flags { get; set; }
	}
#endif

}