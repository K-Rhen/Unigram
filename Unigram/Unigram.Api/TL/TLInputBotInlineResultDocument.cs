// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLInputBotInlineResultDocument : ITLInputBotInlineResultBase, TLInputBotInlineResultDocument 
	{
		public bool HasTitle { get { return Flags.HasFlag(TLInputBotInlineResultDocumentFlag.Title); } set { Flags = value ? (Flags | TLInputBotInlineResultDocumentFlag.Title) : (Flags & ~TLInputBotInlineResultDocumentFlag.Title); } }
		public bool HasDescription { get { return Flags.HasFlag(TLInputBotInlineResultDocumentFlag.Description); } set { Flags = value ? (Flags | TLInputBotInlineResultDocumentFlag.Description) : (Flags & ~TLInputBotInlineResultDocumentFlag.Description); } }

		public TLInputBotInlineResultDocumentFlag Flags { get; set; }
		public String Type { get; set; }
		public String Title { get; set; }
		public String Description { get; set; }
		public TLInputDocumentBase Document { get; set; }

		public ITLInputBotInlineResultDocument() { }
		public ITLInputBotInlineResultDocument(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.InputBotInlineResultDocument; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLInputBotInlineResultDocumentFlag)from.ReadInt32();
			Id = from.ReadString();
			Type = from.ReadString();
			if (HasTitle) Title = from.ReadString();
			if (HasDescription) Description = from.ReadString();
			Document = TLFactory.Read<TLInputDocumentBase>(from);
			SendMessage = TLFactory.Read<TLInputBotInlineMessageBase>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0xFFF8FDC4);
			to.Write((Int32)Flags);
			to.Write(Id);
			to.Write(Type);
			if (HasTitle) to.Write(Title);
			if (HasDescription) to.Write(Description);
			to.WriteObject(Document);
			to.WriteObject(SendMessage);
		}

		private void UpdateFlags()
		{
			HasTitle = Title != null;
			HasDescription = Description != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLInputBotInlineResultDocumentFlag : Int32
	{
		Title = (1 << 1),
		Description = (1 << 2),
	}
#endif

#if !PORTABLE
	[Guid(0xe2885374, 0x6d32, 0x33fe, 0xf3, 0x8d, 0x2e, 0x5b, 0x2f, 0x0a, 0x68, 0x0e)]
	public partial interface TLInputBotInlineResultDocument : TLInputBotInlineResultBase
	{
		bool HasTitle { get; set; }
		bool HasDescription { get; set; }

		TLInputBotInlineResultDocumentFlag Flags { get; set; }
		String Id { get; set; }
		String Type { get; set; }
		String Title { get; set; }
		String Description { get; set; }
		TLInputDocumentBase Document { get; set; }
		TLInputBotInlineMessageBase SendMessage { get; set; }
	}
#endif

}