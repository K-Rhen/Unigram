// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLResPQ : ITLObject, TLResPQ 
	{
		public TLInt128 Nonce { get; set; }
		public TLInt128 ServerNonce { get; set; }
		public Byte[] PQ { get; set; }
		public TLVector<Int64> ServerPublicKeyFingerprints { get; set; }

		public ITLResPQ() { }
		public ITLResPQ(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.ResPQ; } }

		public override void Read(TLBinaryReader from)
		{
			Nonce = TLFactory.Read<TLInt128>(from);
			ServerNonce = TLFactory.Read<TLInt128>(from);
			PQ = from.ReadByteArray();
			ServerPublicKeyFingerprints = TLFactory.Read<TLVector<Int64>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x05162463);
			to.WriteObject(Nonce);
			to.WriteObject(ServerNonce);
			to.WriteByteArray(PQ);
			to.WriteObject(ServerPublicKeyFingerprints);
		}
	}

#if !PORTABLE
	[Guid(0x2be8d2b5, 0x4558, 0xe809, 0xe6, 0x7f, 0xe1, 0xd0, 0x00, 0x34, 0xf9, 0x8c)]
	public partial interface TLResPQ : TLObject
	{
		TLInt128 Nonce { get; set; }
		TLInt128 ServerNonce { get; set; }
		Byte[] PQ { get; set; }
		TLVector<Int64> ServerPublicKeyFingerprints { get; set; }
	}
#endif

}