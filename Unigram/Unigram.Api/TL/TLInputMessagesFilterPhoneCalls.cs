// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLInputMessagesFilterPhoneCalls : ITLMessagesFilterBase, TLInputMessagesFilterPhoneCalls 
	{
		public bool IsMissed { get { return Flags.HasFlag(TLInputMessagesFilterPhoneCallsFlag.Missed); } set { Flags = value ? (Flags | TLInputMessagesFilterPhoneCallsFlag.Missed) : (Flags & ~TLInputMessagesFilterPhoneCallsFlag.Missed); } }

		public TLInputMessagesFilterPhoneCallsFlag Flags { get; set; }

		public ITLInputMessagesFilterPhoneCalls() { }
		public ITLInputMessagesFilterPhoneCalls(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.InputMessagesFilterPhoneCalls; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLInputMessagesFilterPhoneCallsFlag)from.ReadInt32();
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x80C99768);
			to.Write((Int32)Flags);
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLInputMessagesFilterPhoneCallsFlag : Int32
	{
		Missed = (1 << 0),
	}
#endif

#if !PORTABLE
	[Guid(0x63af71ad, 0x7446, 0x5eb0, 0x8d, 0x39, 0xc2, 0xf1, 0x6f, 0xd8, 0xcf, 0x7d)]
	public partial interface TLInputMessagesFilterPhoneCalls : TLMessagesFilterBase
	{
		bool IsMissed { get; set; }

		TLInputMessagesFilterPhoneCallsFlag Flags { get; set; }
	}
#endif

}