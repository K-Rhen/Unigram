// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLPhoneCallDiscarded : ITLPhoneCallBase, TLPhoneCallDiscarded 
	{
		public bool IsNeedRating { get { return Flags.HasFlag(TLPhoneCallDiscardedFlag.NeedRating); } set { Flags = value ? (Flags | TLPhoneCallDiscardedFlag.NeedRating) : (Flags & ~TLPhoneCallDiscardedFlag.NeedRating); } }
		public bool IsNeedDebug { get { return Flags.HasFlag(TLPhoneCallDiscardedFlag.NeedDebug); } set { Flags = value ? (Flags | TLPhoneCallDiscardedFlag.NeedDebug) : (Flags & ~TLPhoneCallDiscardedFlag.NeedDebug); } }
		public bool HasReason { get { return Flags.HasFlag(TLPhoneCallDiscardedFlag.Reason); } set { Flags = value ? (Flags | TLPhoneCallDiscardedFlag.Reason) : (Flags & ~TLPhoneCallDiscardedFlag.Reason); } }
		public bool HasDuration { get { return Flags.HasFlag(TLPhoneCallDiscardedFlag.Duration); } set { Flags = value ? (Flags | TLPhoneCallDiscardedFlag.Duration) : (Flags & ~TLPhoneCallDiscardedFlag.Duration); } }

		public TLPhoneCallDiscardedFlag Flags { get; set; }
		public TLPhoneCallDiscardReasonBase Reason { get; set; }
		public Int32? Duration { get; set; }

		public ITLPhoneCallDiscarded() { }
		public ITLPhoneCallDiscarded(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.PhoneCallDiscarded; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLPhoneCallDiscardedFlag)from.ReadInt32();
			Id = from.ReadInt64();
			if (HasReason) Reason = TLFactory.Read<TLPhoneCallDiscardReasonBase>(from);
			if (HasDuration) Duration = from.ReadInt32();
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0x50CA4DE1);
			to.Write((Int32)Flags);
			to.Write(Id);
			if (HasReason) to.WriteObject(Reason);
			if (HasDuration) to.Write(Duration.Value);
		}

		private void UpdateFlags()
		{
			HasReason = Reason != null;
			HasDuration = Duration != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLPhoneCallDiscardedFlag : Int32
	{
		NeedRating = (1 << 2),
		NeedDebug = (1 << 3),
		Reason = (1 << 0),
		Duration = (1 << 1),
	}
#endif

#if !PORTABLE
	[Guid(0x8aab306d, 0x4218, 0x45d3, 0x35, 0x19, 0x67, 0x9a, 0xea, 0x50, 0xa9, 0x1a)]
	public partial interface TLPhoneCallDiscarded : TLPhoneCallBase
	{
		bool IsNeedRating { get; set; }
		bool IsNeedDebug { get; set; }
		bool HasReason { get; set; }
		bool HasDuration { get; set; }

		TLPhoneCallDiscardedFlag Flags { get; set; }
		Int64 Id { get; set; }
		TLPhoneCallDiscardReasonBase Reason { get; set; }
		Int32? Duration { get; set; }
	}
#endif

}