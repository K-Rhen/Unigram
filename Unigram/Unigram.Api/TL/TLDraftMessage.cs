// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLDraftMessage : ITLDraftMessageBase, TLDraftMessage 
	{
		public bool IsNoWebPage { get { return Flags.HasFlag(TLDraftMessageFlag.NoWebPage); } set { Flags = value ? (Flags | TLDraftMessageFlag.NoWebPage) : (Flags & ~TLDraftMessageFlag.NoWebPage); } }
		public bool HasReplyToMsgId { get { return Flags.HasFlag(TLDraftMessageFlag.ReplyToMsgId); } set { Flags = value ? (Flags | TLDraftMessageFlag.ReplyToMsgId) : (Flags & ~TLDraftMessageFlag.ReplyToMsgId); } }
		public bool HasEntities { get { return Flags.HasFlag(TLDraftMessageFlag.Entities); } set { Flags = value ? (Flags | TLDraftMessageFlag.Entities) : (Flags & ~TLDraftMessageFlag.Entities); } }

		public TLDraftMessageFlag Flags { get; set; }
		public Int32? ReplyToMsgId { get; set; }
		public String Message { get; set; }
		public TLVector<TLMessageEntityBase> Entities { get; set; }
		public Int32 Date { get; set; }

		public ITLDraftMessage() { }
		public ITLDraftMessage(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.DraftMessage; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLDraftMessageFlag)from.ReadInt32();
			if (HasReplyToMsgId) ReplyToMsgId = from.ReadInt32();
			Message = from.ReadString();
			if (HasEntities) Entities = TLFactory.Read<TLVector<TLMessageEntityBase>>(from);
			Date = from.ReadInt32();
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0xFD8E711F);
			to.Write((Int32)Flags);
			if (HasReplyToMsgId) to.Write(ReplyToMsgId.Value);
			to.Write(Message);
			if (HasEntities) to.WriteObject(Entities);
			to.Write(Date);
		}

		private void UpdateFlags()
		{
			HasReplyToMsgId = ReplyToMsgId != null;
			HasEntities = Entities != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLDraftMessageFlag : Int32
	{
		NoWebPage = (1 << 1),
		ReplyToMsgId = (1 << 0),
		Entities = (1 << 3),
	}
#endif

#if !PORTABLE
	[Guid(0x1173d1f1, 0x0ae8, 0xa890, 0x7e, 0x52, 0xc3, 0xab, 0xff, 0x2f, 0xea, 0x87)]
	public partial interface TLDraftMessage : TLDraftMessageBase
	{
		bool IsNoWebPage { get; set; }
		bool HasReplyToMsgId { get; set; }
		bool HasEntities { get; set; }

		TLDraftMessageFlag Flags { get; set; }
		Int32? ReplyToMsgId { get; set; }
		String Message { get; set; }
		TLVector<TLMessageEntityBase> Entities { get; set; }
		Int32 Date { get; set; }
	}
#endif

}