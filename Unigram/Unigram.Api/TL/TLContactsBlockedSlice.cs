// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLContactsBlockedSlice : ITLContactsBlockedBase, TLContactsBlockedSlice 
	{
		public Int32 Count { get; set; }

		public ITLContactsBlockedSlice() { }
		public ITLContactsBlockedSlice(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.ContactsBlockedSlice; } }

		public override void Read(TLBinaryReader from)
		{
			Count = from.ReadInt32();
			Blocked = TLFactory.Read<TLVector<TLContactBlocked>>(from);
			Users = TLFactory.Read<TLVector<TLUserBase>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x900802A1);
			to.Write(Count);
			to.WriteObject(Blocked);
			to.WriteObject(Users);
		}
	}

#if !PORTABLE
	[Guid(0x8dfb760e, 0x3780, 0x8ccc, 0xd7, 0x9c, 0x22, 0x98, 0x11, 0xd9, 0x35, 0x7f)]
	public partial interface TLContactsBlockedSlice : TLContactsBlockedBase
	{
		Int32 Count { get; set; }
		TLVector<TLContactBlocked> Blocked { get; set; }
		TLVector<TLUserBase> Users { get; set; }
	}
#endif

}