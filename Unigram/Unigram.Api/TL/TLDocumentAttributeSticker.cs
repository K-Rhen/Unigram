// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLDocumentAttributeSticker : ITLDocumentAttributeBase, TLDocumentAttributeSticker 
	{
		public bool IsMask { get { return Flags.HasFlag(TLDocumentAttributeStickerFlag.Mask); } set { Flags = value ? (Flags | TLDocumentAttributeStickerFlag.Mask) : (Flags & ~TLDocumentAttributeStickerFlag.Mask); } }
		public bool HasMaskCoords { get { return Flags.HasFlag(TLDocumentAttributeStickerFlag.MaskCoords); } set { Flags = value ? (Flags | TLDocumentAttributeStickerFlag.MaskCoords) : (Flags & ~TLDocumentAttributeStickerFlag.MaskCoords); } }

		public TLDocumentAttributeStickerFlag Flags { get; set; }
		public String Alt { get; set; }
		public TLInputStickerSetBase StickerSet { get; set; }
		public TLMaskCoords MaskCoords { get; set; }

		public ITLDocumentAttributeSticker() { }
		public ITLDocumentAttributeSticker(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.DocumentAttributeSticker; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLDocumentAttributeStickerFlag)from.ReadInt32();
			Alt = from.ReadString();
			StickerSet = TLFactory.Read<TLInputStickerSetBase>(from);
			if (HasMaskCoords) MaskCoords = TLFactory.Read<TLMaskCoords>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0x6319D612);
			to.Write((Int32)Flags);
			to.Write(Alt);
			to.WriteObject(StickerSet);
			if (HasMaskCoords) to.WriteObject(MaskCoords);
		}

		private void UpdateFlags()
		{
			HasMaskCoords = MaskCoords != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLDocumentAttributeStickerFlag : Int32
	{
		Mask = (1 << 1),
		MaskCoords = (1 << 0),
	}
#endif

#if !PORTABLE
	[Guid(0xf83854a2, 0xd82b, 0x0277, 0x53, 0x06, 0x42, 0x2d, 0x19, 0x01, 0x4b, 0xf8)]
	public partial interface TLDocumentAttributeSticker : TLDocumentAttributeBase
	{
		bool IsMask { get; set; }
		bool HasMaskCoords { get; set; }

		TLDocumentAttributeStickerFlag Flags { get; set; }
		String Alt { get; set; }
		TLInputStickerSetBase StickerSet { get; set; }
		TLMaskCoords MaskCoords { get; set; }
	}
#endif

}