// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLBotInlineMessageText : ITLBotInlineMessageBase, TLBotInlineMessageText 
	{
		public bool IsNoWebPage { get { return Flags.HasFlag(TLBotInlineMessageTextFlag.NoWebPage); } set { Flags = value ? (Flags | TLBotInlineMessageTextFlag.NoWebPage) : (Flags & ~TLBotInlineMessageTextFlag.NoWebPage); } }
		public bool HasEntities { get { return Flags.HasFlag(TLBotInlineMessageTextFlag.Entities); } set { Flags = value ? (Flags | TLBotInlineMessageTextFlag.Entities) : (Flags & ~TLBotInlineMessageTextFlag.Entities); } }
		public bool HasReplyMarkup { get { return Flags.HasFlag(TLBotInlineMessageTextFlag.ReplyMarkup); } set { Flags = value ? (Flags | TLBotInlineMessageTextFlag.ReplyMarkup) : (Flags & ~TLBotInlineMessageTextFlag.ReplyMarkup); } }

		public TLBotInlineMessageTextFlag Flags { get; set; }
		public String Message { get; set; }
		public TLVector<TLMessageEntityBase> Entities { get; set; }

		public ITLBotInlineMessageText() { }
		public ITLBotInlineMessageText(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.BotInlineMessageText; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLBotInlineMessageTextFlag)from.ReadInt32();
			Message = from.ReadString();
			if (HasEntities) Entities = TLFactory.Read<TLVector<TLMessageEntityBase>>(from);
			if (HasReplyMarkup) ReplyMarkup = TLFactory.Read<TLReplyMarkupBase>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0x8C7F65E2);
			to.Write((Int32)Flags);
			to.Write(Message);
			if (HasEntities) to.WriteObject(Entities);
			if (HasReplyMarkup) to.WriteObject(ReplyMarkup);
		}

		private void UpdateFlags()
		{
			HasEntities = Entities != null;
			HasReplyMarkup = ReplyMarkup != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLBotInlineMessageTextFlag : Int32
	{
		NoWebPage = (1 << 0),
		Entities = (1 << 1),
		ReplyMarkup = (1 << 2),
	}
#endif

#if !PORTABLE
	[Guid(0xaaeaed91, 0xa5b1, 0x94ae, 0xb9, 0x7c, 0x74, 0xcc, 0x41, 0xb3, 0xaf, 0x8a)]
	public partial interface TLBotInlineMessageText : TLBotInlineMessageBase
	{
		bool IsNoWebPage { get; set; }
		bool HasEntities { get; set; }
		bool HasReplyMarkup { get; set; }

		TLBotInlineMessageTextFlag Flags { get; set; }
		String Message { get; set; }
		TLVector<TLMessageEntityBase> Entities { get; set; }
		TLReplyMarkupBase ReplyMarkup { get; set; }
	}
#endif

}