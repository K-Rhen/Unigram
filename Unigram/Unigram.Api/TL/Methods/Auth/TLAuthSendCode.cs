// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL.Methods.Auth
{
	/// <summary>
	/// RCP method auth.sendCode.
	/// Returns <see cref="Telegram.Api.TL.TLAuthSentCode"/>
	/// </summary>
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLAuthSendCode : ITLObject, TLAuthSendCode
	{
		public bool IsAllowFlashcall { get { return Flags.HasFlag(TLAuthSendCodeFlag.AllowFlashcall); } set { Flags = value ? (Flags | TLAuthSendCodeFlag.AllowFlashcall) : (Flags & ~TLAuthSendCodeFlag.AllowFlashcall); } }
		public bool HasCurrentNumber { get { return Flags.HasFlag(TLAuthSendCodeFlag.CurrentNumber); } set { Flags = value ? (Flags | TLAuthSendCodeFlag.CurrentNumber) : (Flags & ~TLAuthSendCodeFlag.CurrentNumber); } }

		public TLAuthSendCodeFlag Flags { get; set; }
		public String PhoneNumber { get; set; }
		public Boolean? CurrentNumber { get; set; }
		public Int32 ApiId { get; set; }
		public String ApiHash { get; set; }

		public ITLAuthSendCode() { }
		public ITLAuthSendCode(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.AuthSendCode; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLAuthSendCodeFlag)from.ReadInt32();
			PhoneNumber = from.ReadString();
			if (HasCurrentNumber) CurrentNumber = from.ReadBoolean();
			ApiId = from.ReadInt32();
			ApiHash = from.ReadString();
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0x86AEF0EC);
			to.Write((Int32)Flags);
			to.Write(PhoneNumber);
			if (HasCurrentNumber) to.Write(CurrentNumber.Value);
			to.Write(ApiId);
			to.Write(ApiHash);
		}

		private void UpdateFlags()
		{
			HasCurrentNumber = CurrentNumber != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLAuthSendCodeFlag : Int32
	{
		AllowFlashcall = (1 << 0),
		CurrentNumber = (1 << 0),
	}
#endif

#if !PORTABLE
	[Guid(0xacc4b0bb, 0xd58d, 0x5f6f, 0xa8, 0xa5, 0xc0, 0x5f, 0x34, 0x96, 0x5d, 0x55)]
	public partial interface TLAuthSendCode : TLObject
	{
		bool IsAllowFlashcall { get; set; }
		bool HasCurrentNumber { get; set; }

		TLAuthSendCodeFlag Flags { get; set; }
		String PhoneNumber { get; set; }
		Boolean? CurrentNumber { get; set; }
		Int32 ApiId { get; set; }
		String ApiHash { get; set; }
	}
#endif

}