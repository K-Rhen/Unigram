// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL.Methods
{
	/// <summary>
	/// RCP method invokeAfterMsgs.
	/// Returns <see cref="Telegram.Api.TL.TLObject"/>
	/// </summary>
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLInvokeAfterMsgs : ITLObject, TLInvokeAfterMsgs
	{
		public TLVector<Int64> MsgIds { get; set; }
		public TLObject Query { get; set; }

		public ITLInvokeAfterMsgs() { }
		public ITLInvokeAfterMsgs(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.InvokeAfterMsgs; } }

		public override void Read(TLBinaryReader from)
		{
			MsgIds = TLFactory.Read<TLVector<Int64>>(from);
			Query = TLFactory.Read<TLObject>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x3DC4B4F0);
			to.WriteObject(MsgIds);
			to.WriteObject(Query);
		}
	}

#if !PORTABLE
	[Guid(0x61e4d49d, 0x8c26, 0x3480, 0xf5, 0xc8, 0x56, 0x4e, 0x15, 0x5c, 0x67, 0xa6)]
	public partial interface TLInvokeAfterMsgs : TLObject
	{
		TLVector<Int64> MsgIds { get; set; }
		TLObject Query { get; set; }
	}
#endif

}