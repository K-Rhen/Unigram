// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL.Methods.Account
{
	/// <summary>
	/// RCP method account.updateProfile.
	/// Returns <see cref="Telegram.Api.TL.TLUserBase"/>
	/// </summary>
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLAccountUpdateProfile : ITLObject, TLAccountUpdateProfile
	{
		public bool HasFirstName { get { return Flags.HasFlag(TLAccountUpdateProfileFlag.FirstName); } set { Flags = value ? (Flags | TLAccountUpdateProfileFlag.FirstName) : (Flags & ~TLAccountUpdateProfileFlag.FirstName); } }
		public bool HasLastName { get { return Flags.HasFlag(TLAccountUpdateProfileFlag.LastName); } set { Flags = value ? (Flags | TLAccountUpdateProfileFlag.LastName) : (Flags & ~TLAccountUpdateProfileFlag.LastName); } }
		public bool HasAbout { get { return Flags.HasFlag(TLAccountUpdateProfileFlag.About); } set { Flags = value ? (Flags | TLAccountUpdateProfileFlag.About) : (Flags & ~TLAccountUpdateProfileFlag.About); } }

		public TLAccountUpdateProfileFlag Flags { get; set; }
		public String FirstName { get; set; }
		public String LastName { get; set; }
		public String About { get; set; }

		public ITLAccountUpdateProfile() { }
		public ITLAccountUpdateProfile(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.AccountUpdateProfile; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLAccountUpdateProfileFlag)from.ReadInt32();
			if (HasFirstName) FirstName = from.ReadString();
			if (HasLastName) LastName = from.ReadString();
			if (HasAbout) About = from.ReadString();
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0x78515775);
			to.Write((Int32)Flags);
			if (HasFirstName) to.Write(FirstName);
			if (HasLastName) to.Write(LastName);
			if (HasAbout) to.Write(About);
		}

		private void UpdateFlags()
		{
			HasFirstName = FirstName != null;
			HasLastName = LastName != null;
			HasAbout = About != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLAccountUpdateProfileFlag : Int32
	{
		FirstName = (1 << 0),
		LastName = (1 << 1),
		About = (1 << 2),
	}
#endif

#if !PORTABLE
	[Guid(0xb1cb11ee, 0x5290, 0x0be4, 0x07, 0xaa, 0xc0, 0xca, 0x06, 0x0c, 0x23, 0xee)]
	public partial interface TLAccountUpdateProfile : TLObject
	{
		bool HasFirstName { get; set; }
		bool HasLastName { get; set; }
		bool HasAbout { get; set; }

		TLAccountUpdateProfileFlag Flags { get; set; }
		String FirstName { get; set; }
		String LastName { get; set; }
		String About { get; set; }
	}
#endif

}