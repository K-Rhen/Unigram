// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL.Methods
{
	/// <summary>
	/// RCP method set_client_DH_params.
	/// Returns <see cref="Telegram.Api.TL.TLSetClientDHParamsAnswerBase"/>
	/// </summary>
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLSetClientDHParams : ITLObject, TLSetClientDHParams
	{
		public TLInt128 Nonce { get; set; }
		public TLInt128 ServerNonce { get; set; }
		public Byte[] EncryptedData { get; set; }

		public ITLSetClientDHParams() { }
		public ITLSetClientDHParams(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.SetClientDHParams; } }

		public override void Read(TLBinaryReader from)
		{
			Nonce = TLFactory.Read<TLInt128>(from);
			ServerNonce = TLFactory.Read<TLInt128>(from);
			EncryptedData = from.ReadByteArray();
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0xF5045F1F);
			to.WriteObject(Nonce);
			to.WriteObject(ServerNonce);
			to.WriteByteArray(EncryptedData);
		}
	}

#if !PORTABLE
	[Guid(0xc3926028, 0x8ebf, 0xa373, 0xf3, 0x98, 0xea, 0xd5, 0x68, 0x4e, 0xd0, 0xa4)]
	public partial interface TLSetClientDHParams : TLObject
	{
		TLInt128 Nonce { get; set; }
		TLInt128 ServerNonce { get; set; }
		Byte[] EncryptedData { get; set; }
	}
#endif

}