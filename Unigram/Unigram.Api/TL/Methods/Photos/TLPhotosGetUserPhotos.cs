// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL.Methods.Photos
{
	/// <summary>
	/// RCP method photos.getUserPhotos.
	/// Returns <see cref="Telegram.Api.TL.TLPhotosPhotos"/>
	/// </summary>
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLPhotosGetUserPhotos : ITLObject, TLPhotosGetUserPhotos
	{
		public TLInputUserBase UserId { get; set; }
		public Int32 Offset { get; set; }
		public Int64 MaxId { get; set; }
		public Int32 Limit { get; set; }

		public ITLPhotosGetUserPhotos() { }
		public ITLPhotosGetUserPhotos(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.PhotosGetUserPhotos; } }

		public override void Read(TLBinaryReader from)
		{
			UserId = TLFactory.Read<TLInputUserBase>(from);
			Offset = from.ReadInt32();
			MaxId = from.ReadInt64();
			Limit = from.ReadInt32();
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x91CD32A8);
			to.WriteObject(UserId);
			to.Write(Offset);
			to.Write(MaxId);
			to.Write(Limit);
		}
	}

#if !PORTABLE
	[Guid(0x8335b493, 0xab83, 0x0b9d, 0x64, 0xe5, 0x2e, 0xe3, 0xf9, 0xee, 0x78, 0x18)]
	public partial interface TLPhotosGetUserPhotos : TLObject
	{
		TLInputUserBase UserId { get; set; }
		Int32 Offset { get; set; }
		Int64 MaxId { get; set; }
		Int32 Limit { get; set; }
	}
#endif

}