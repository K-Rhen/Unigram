// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL.Methods
{
	/// <summary>
	/// RCP method initConnection.
	/// Returns <see cref="Telegram.Api.TL.TLObject"/>
	/// </summary>
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLInitConnection : ITLObject, TLInitConnection
	{
		public Int32 ApiId { get; set; }
		public String DeviceModel { get; set; }
		public String SystemVersion { get; set; }
		public String AppVersion { get; set; }
		public String LangCode { get; set; }
		public TLObject Query { get; set; }

		public ITLInitConnection() { }
		public ITLInitConnection(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.InitConnection; } }

		public override void Read(TLBinaryReader from)
		{
			ApiId = from.ReadInt32();
			DeviceModel = from.ReadString();
			SystemVersion = from.ReadString();
			AppVersion = from.ReadString();
			LangCode = from.ReadString();
			Query = TLFactory.Read<TLObject>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x69796DE9);
			to.Write(ApiId);
			to.Write(DeviceModel);
			to.Write(SystemVersion);
			to.Write(AppVersion);
			to.Write(LangCode);
			to.WriteObject(Query);
		}
	}

#if !PORTABLE
	[Guid(0x61e4d49d, 0x8c26, 0x3480, 0xf5, 0xc8, 0x56, 0x4e, 0x15, 0x5c, 0x67, 0xa6)]
	public partial interface TLInitConnection : TLObject
	{
		Int32 ApiId { get; set; }
		String DeviceModel { get; set; }
		String SystemVersion { get; set; }
		String AppVersion { get; set; }
		String LangCode { get; set; }
		TLObject Query { get; set; }
	}
#endif

}