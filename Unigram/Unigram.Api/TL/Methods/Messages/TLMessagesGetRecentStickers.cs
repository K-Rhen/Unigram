// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL.Methods.Messages
{
	/// <summary>
	/// RCP method messages.getRecentStickers.
	/// Returns <see cref="Telegram.Api.TL.TLMessagesRecentStickersBase"/>
	/// </summary>
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLMessagesGetRecentStickers : ITLObject, TLMessagesGetRecentStickers
	{
		public bool IsAttached { get { return Flags.HasFlag(TLMessagesGetRecentStickersFlag.Attached); } set { Flags = value ? (Flags | TLMessagesGetRecentStickersFlag.Attached) : (Flags & ~TLMessagesGetRecentStickersFlag.Attached); } }

		public TLMessagesGetRecentStickersFlag Flags { get; set; }
		public Int32 Hash { get; set; }

		public ITLMessagesGetRecentStickers() { }
		public ITLMessagesGetRecentStickers(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.MessagesGetRecentStickers; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLMessagesGetRecentStickersFlag)from.ReadInt32();
			Hash = from.ReadInt32();
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x5EA192C9);
			to.Write((Int32)Flags);
			to.Write(Hash);
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLMessagesGetRecentStickersFlag : Int32
	{
		Attached = (1 << 0),
	}
#endif

#if !PORTABLE
	[Guid(0x232314ce, 0xe84b, 0x0a83, 0xbf, 0x7c, 0xc3, 0x6f, 0xfb, 0x47, 0xcf, 0x17)]
	public partial interface TLMessagesGetRecentStickers : TLObject
	{
		bool IsAttached { get; set; }

		TLMessagesGetRecentStickersFlag Flags { get; set; }
		Int32 Hash { get; set; }
	}
#endif

}