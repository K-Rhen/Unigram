// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL.Methods.Messages
{
	/// <summary>
	/// RCP method messages.getInlineBotResults.
	/// Returns <see cref="Telegram.Api.TL.TLMessagesBotResults"/>
	/// </summary>
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLMessagesGetInlineBotResults : ITLObject, TLMessagesGetInlineBotResults
	{
		public bool HasGeoPoint { get { return Flags.HasFlag(TLMessagesGetInlineBotResultsFlag.GeoPoint); } set { Flags = value ? (Flags | TLMessagesGetInlineBotResultsFlag.GeoPoint) : (Flags & ~TLMessagesGetInlineBotResultsFlag.GeoPoint); } }

		public TLMessagesGetInlineBotResultsFlag Flags { get; set; }
		public TLInputUserBase Bot { get; set; }
		public TLInputPeerBase Peer { get; set; }
		public TLInputGeoPointBase GeoPoint { get; set; }
		public String Query { get; set; }
		public String Offset { get; set; }

		public ITLMessagesGetInlineBotResults() { }
		public ITLMessagesGetInlineBotResults(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.MessagesGetInlineBotResults; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLMessagesGetInlineBotResultsFlag)from.ReadInt32();
			Bot = TLFactory.Read<TLInputUserBase>(from);
			Peer = TLFactory.Read<TLInputPeerBase>(from);
			if (HasGeoPoint) GeoPoint = TLFactory.Read<TLInputGeoPointBase>(from);
			Query = from.ReadString();
			Offset = from.ReadString();
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0x514E999D);
			to.Write((Int32)Flags);
			to.WriteObject(Bot);
			to.WriteObject(Peer);
			if (HasGeoPoint) to.WriteObject(GeoPoint);
			to.Write(Query);
			to.Write(Offset);
		}

		private void UpdateFlags()
		{
			HasGeoPoint = GeoPoint != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLMessagesGetInlineBotResultsFlag : Int32
	{
		GeoPoint = (1 << 0),
	}
#endif

#if !PORTABLE
	[Guid(0xc16565de, 0x5caf, 0x3c48, 0x0f, 0x29, 0x7b, 0x2f, 0xf8, 0x49, 0xa2, 0x29)]
	public partial interface TLMessagesGetInlineBotResults : TLObject
	{
		bool HasGeoPoint { get; set; }

		TLMessagesGetInlineBotResultsFlag Flags { get; set; }
		TLInputUserBase Bot { get; set; }
		TLInputPeerBase Peer { get; set; }
		TLInputGeoPointBase GeoPoint { get; set; }
		String Query { get; set; }
		String Offset { get; set; }
	}
#endif

}