// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL.Methods.Messages
{
	/// <summary>
	/// RCP method messages.setBotShippingResults.
	/// Returns <see cref="Telegram.Api.TL.TLBool"/>
	/// </summary>
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLMessagesSetBotShippingResults : ITLObject, TLMessagesSetBotShippingResults
	{
		public bool HasError { get { return Flags.HasFlag(TLMessagesSetBotShippingResultsFlag.Error); } set { Flags = value ? (Flags | TLMessagesSetBotShippingResultsFlag.Error) : (Flags & ~TLMessagesSetBotShippingResultsFlag.Error); } }
		public bool HasShippingOptions { get { return Flags.HasFlag(TLMessagesSetBotShippingResultsFlag.ShippingOptions); } set { Flags = value ? (Flags | TLMessagesSetBotShippingResultsFlag.ShippingOptions) : (Flags & ~TLMessagesSetBotShippingResultsFlag.ShippingOptions); } }

		public TLMessagesSetBotShippingResultsFlag Flags { get; set; }
		public Int64 QueryId { get; set; }
		public String Error { get; set; }
		public TLVector<TLShippingOption> ShippingOptions { get; set; }

		public ITLMessagesSetBotShippingResults() { }
		public ITLMessagesSetBotShippingResults(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.MessagesSetBotShippingResults; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLMessagesSetBotShippingResultsFlag)from.ReadInt32();
			QueryId = from.ReadInt64();
			if (HasError) Error = from.ReadString();
			if (HasShippingOptions) ShippingOptions = TLFactory.Read<TLVector<TLShippingOption>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0xE5F672FA);
			to.Write((Int32)Flags);
			to.Write(QueryId);
			if (HasError) to.Write(Error);
			if (HasShippingOptions) to.WriteObject(ShippingOptions);
		}

		private void UpdateFlags()
		{
			HasError = Error != null;
			HasShippingOptions = ShippingOptions != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLMessagesSetBotShippingResultsFlag : Int32
	{
		Error = (1 << 0),
		ShippingOptions = (1 << 1),
	}
#endif

#if !PORTABLE
	[Guid(0x13ff06c5, 0xab4b, 0x6edd, 0x68, 0xab, 0x3e, 0x63, 0x50, 0xe9, 0x53, 0x05)]
	public partial interface TLMessagesSetBotShippingResults : TLObject
	{
		bool HasError { get; set; }
		bool HasShippingOptions { get; set; }

		TLMessagesSetBotShippingResultsFlag Flags { get; set; }
		Int64 QueryId { get; set; }
		String Error { get; set; }
		TLVector<TLShippingOption> ShippingOptions { get; set; }
	}
#endif

}