// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL.Methods.Messages
{
	/// <summary>
	/// RCP method messages.saveDraft.
	/// Returns <see cref="Telegram.Api.TL.TLBool"/>
	/// </summary>
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLMessagesSaveDraft : ITLObject, TLMessagesSaveDraft
	{
		public bool IsNoWebPage { get { return Flags.HasFlag(TLMessagesSaveDraftFlag.NoWebPage); } set { Flags = value ? (Flags | TLMessagesSaveDraftFlag.NoWebPage) : (Flags & ~TLMessagesSaveDraftFlag.NoWebPage); } }
		public bool HasReplyToMsgId { get { return Flags.HasFlag(TLMessagesSaveDraftFlag.ReplyToMsgId); } set { Flags = value ? (Flags | TLMessagesSaveDraftFlag.ReplyToMsgId) : (Flags & ~TLMessagesSaveDraftFlag.ReplyToMsgId); } }
		public bool HasEntities { get { return Flags.HasFlag(TLMessagesSaveDraftFlag.Entities); } set { Flags = value ? (Flags | TLMessagesSaveDraftFlag.Entities) : (Flags & ~TLMessagesSaveDraftFlag.Entities); } }

		public TLMessagesSaveDraftFlag Flags { get; set; }
		public Int32? ReplyToMsgId { get; set; }
		public TLInputPeerBase Peer { get; set; }
		public String Message { get; set; }
		public TLVector<TLMessageEntityBase> Entities { get; set; }

		public ITLMessagesSaveDraft() { }
		public ITLMessagesSaveDraft(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.MessagesSaveDraft; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLMessagesSaveDraftFlag)from.ReadInt32();
			if (HasReplyToMsgId) ReplyToMsgId = from.ReadInt32();
			Peer = TLFactory.Read<TLInputPeerBase>(from);
			Message = from.ReadString();
			if (HasEntities) Entities = TLFactory.Read<TLVector<TLMessageEntityBase>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0xBC39E14B);
			to.Write((Int32)Flags);
			if (HasReplyToMsgId) to.Write(ReplyToMsgId.Value);
			to.WriteObject(Peer);
			to.Write(Message);
			if (HasEntities) to.WriteObject(Entities);
		}

		private void UpdateFlags()
		{
			HasReplyToMsgId = ReplyToMsgId != null;
			HasEntities = Entities != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLMessagesSaveDraftFlag : Int32
	{
		NoWebPage = (1 << 1),
		ReplyToMsgId = (1 << 0),
		Entities = (1 << 3),
	}
#endif

#if !PORTABLE
	[Guid(0x13ff06c5, 0xab4b, 0x6edd, 0x68, 0xab, 0x3e, 0x63, 0x50, 0xe9, 0x53, 0x05)]
	public partial interface TLMessagesSaveDraft : TLObject
	{
		bool IsNoWebPage { get; set; }
		bool HasReplyToMsgId { get; set; }
		bool HasEntities { get; set; }

		TLMessagesSaveDraftFlag Flags { get; set; }
		Int32? ReplyToMsgId { get; set; }
		TLInputPeerBase Peer { get; set; }
		String Message { get; set; }
		TLVector<TLMessageEntityBase> Entities { get; set; }
	}
#endif

}