// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL.Methods.Messages
{
	/// <summary>
	/// RCP method messages.acceptEncryption.
	/// Returns <see cref="Telegram.Api.TL.TLEncryptedChatBase"/>
	/// </summary>
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLMessagesAcceptEncryption : ITLObject, TLMessagesAcceptEncryption
	{
		public TLInputEncryptedChat Peer { get; set; }
		public Byte[] GB { get; set; }
		public Int64 KeyFingerprint { get; set; }

		public ITLMessagesAcceptEncryption() { }
		public ITLMessagesAcceptEncryption(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.MessagesAcceptEncryption; } }

		public override void Read(TLBinaryReader from)
		{
			Peer = TLFactory.Read<TLInputEncryptedChat>(from);
			GB = from.ReadByteArray();
			KeyFingerprint = from.ReadInt64();
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x3DBC0415);
			to.WriteObject(Peer);
			to.WriteByteArray(GB);
			to.Write(KeyFingerprint);
		}
	}

#if !PORTABLE
	[Guid(0xa0e8d796, 0x017e, 0xa6c4, 0x86, 0x9a, 0x55, 0x64, 0xec, 0xf4, 0xac, 0x7f)]
	public partial interface TLMessagesAcceptEncryption : TLObject
	{
		TLInputEncryptedChat Peer { get; set; }
		Byte[] GB { get; set; }
		Int64 KeyFingerprint { get; set; }
	}
#endif

}