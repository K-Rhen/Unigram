// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL.Methods.Messages
{
	/// <summary>
	/// RCP method messages.deleteMessages.
	/// Returns <see cref="Telegram.Api.TL.TLMessagesAffectedMessages"/>
	/// </summary>
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLMessagesDeleteMessages : ITLObject, TLMessagesDeleteMessages
	{
		public bool IsRevoke { get { return Flags.HasFlag(TLMessagesDeleteMessagesFlag.Revoke); } set { Flags = value ? (Flags | TLMessagesDeleteMessagesFlag.Revoke) : (Flags & ~TLMessagesDeleteMessagesFlag.Revoke); } }

		public TLMessagesDeleteMessagesFlag Flags { get; set; }
		public TLVector<Int32> Id { get; set; }

		public ITLMessagesDeleteMessages() { }
		public ITLMessagesDeleteMessages(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.MessagesDeleteMessages; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLMessagesDeleteMessagesFlag)from.ReadInt32();
			Id = TLFactory.Read<TLVector<Int32>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0xE58E95D2);
			to.Write((Int32)Flags);
			to.WriteObject(Id);
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLMessagesDeleteMessagesFlag : Int32
	{
		Revoke = (1 << 0),
	}
#endif

#if !PORTABLE
	[Guid(0x8945beb6, 0x1533, 0xf53e, 0x9c, 0x7a, 0x3a, 0xe5, 0x3c, 0x95, 0x34, 0x8b)]
	public partial interface TLMessagesDeleteMessages : TLObject
	{
		bool IsRevoke { get; set; }

		TLMessagesDeleteMessagesFlag Flags { get; set; }
		TLVector<Int32> Id { get; set; }
	}
#endif

}