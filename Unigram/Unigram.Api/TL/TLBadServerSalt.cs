// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLBadServerSalt : ITLBadMsgNotificationBase, TLBadServerSalt 
	{
		public Int64 NewServerSalt { get; set; }

		public ITLBadServerSalt() { }
		public ITLBadServerSalt(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.BadServerSalt; } }

		public override void Read(TLBinaryReader from)
		{
			BadMsgId = from.ReadInt64();
			BadMsgSeqno = from.ReadInt32();
			ErrorCode = from.ReadInt32();
			NewServerSalt = from.ReadInt64();
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0xEDAB447B);
			to.Write(BadMsgId);
			to.Write(BadMsgSeqno);
			to.Write(ErrorCode);
			to.Write(NewServerSalt);
		}
	}

#if !PORTABLE
	[Guid(0xc1f051a0, 0x7283, 0x97b4, 0x04, 0x0f, 0xd6, 0x30, 0x2d, 0x7a, 0xc4, 0x5c)]
	public partial interface TLBadServerSalt : TLBadMsgNotificationBase
	{
		Int64 BadMsgId { get; set; }
		Int32 BadMsgSeqno { get; set; }
		Int32 ErrorCode { get; set; }
		Int64 NewServerSalt { get; set; }
	}
#endif

}