// <auto-generated/>
using System;
using Telegram.Api.TL.Methods;
using Telegram.Api.TL.Methods.Contest;
using Telegram.Api.TL.Methods.Auth;
using Telegram.Api.TL.Methods.Account;
using Telegram.Api.TL.Methods.Users;
using Telegram.Api.TL.Methods.Contacts;
using Telegram.Api.TL.Methods.Messages;
using Telegram.Api.TL.Methods.Updates;
using Telegram.Api.TL.Methods.Photos;
using Telegram.Api.TL.Methods.Upload;
using Telegram.Api.TL.Methods.Help;
using Telegram.Api.TL.Methods.Channels;
using Telegram.Api.TL.Methods.Bots;
using Telegram.Api.TL.Methods.Payments;
using Telegram.Api.TL.Methods.Phone;

namespace Telegram.Api.TL
{
	public static partial class TLFactory
	{
		public static T Read<T>(TLBinaryReader from, TLType type)
		{
			switch (type)
			{
				case TLType.ReqPQ: return (T)(Object)new ITLReqPQ(from);
				case TLType.ReqDHParams: return (T)(Object)new ITLReqDHParams(from);
				case TLType.SetClientDHParams: return (T)(Object)new ITLSetClientDHParams(from);
				case TLType.DestroyAuthKey: return (T)(Object)new ITLDestroyAuthKey(from);
				case TLType.RPCDropAnswer: return (T)(Object)new ITLRPCDropAnswer(from);
				case TLType.GetFutureSalts: return (T)(Object)new ITLGetFutureSalts(from);
				case TLType.Ping: return (T)(Object)new ITLPing(from);
				case TLType.PingDelayDisconnect: return (T)(Object)new ITLPingDelayDisconnect(from);
				case TLType.DestroySession: return (T)(Object)new ITLDestroySession(from);
				case TLType.ContestSaveDeveloperInfo: return (T)(Object)new ITLContestSaveDeveloperInfo(from);
				case TLType.InvokeAfterMsg: return (T)(Object)new ITLInvokeAfterMsg(from);
				case TLType.InvokeAfterMsgs: return (T)(Object)new ITLInvokeAfterMsgs(from);
				case TLType.InitConnection: return (T)(Object)new ITLInitConnection(from);
				case TLType.InvokeWithLayer: return (T)(Object)new ITLInvokeWithLayer(from);
				case TLType.InvokeWithoutUpdates: return (T)(Object)new ITLInvokeWithoutUpdates(from);
				case TLType.AuthCheckPhone: return (T)(Object)new ITLAuthCheckPhone(from);
				case TLType.AuthSendCode: return (T)(Object)new ITLAuthSendCode(from);
				case TLType.AuthSignUp: return (T)(Object)new ITLAuthSignUp(from);
				case TLType.AuthSignIn: return (T)(Object)new ITLAuthSignIn(from);
				case TLType.AuthLogOut: return (T)(Object)new ITLAuthLogOut(from);
				case TLType.AuthResetAuthorizations: return (T)(Object)new ITLAuthResetAuthorizations(from);
				case TLType.AuthSendInvites: return (T)(Object)new ITLAuthSendInvites(from);
				case TLType.AuthExportAuthorization: return (T)(Object)new ITLAuthExportAuthorization(from);
				case TLType.AuthImportAuthorization: return (T)(Object)new ITLAuthImportAuthorization(from);
				case TLType.AuthBindTempAuthKey: return (T)(Object)new ITLAuthBindTempAuthKey(from);
				case TLType.AuthImportBotAuthorization: return (T)(Object)new ITLAuthImportBotAuthorization(from);
				case TLType.AuthCheckPassword: return (T)(Object)new ITLAuthCheckPassword(from);
				case TLType.AuthRequestPasswordRecovery: return (T)(Object)new ITLAuthRequestPasswordRecovery(from);
				case TLType.AuthRecoverPassword: return (T)(Object)new ITLAuthRecoverPassword(from);
				case TLType.AuthResendCode: return (T)(Object)new ITLAuthResendCode(from);
				case TLType.AuthCancelCode: return (T)(Object)new ITLAuthCancelCode(from);
				case TLType.AuthDropTempAuthKeys: return (T)(Object)new ITLAuthDropTempAuthKeys(from);
				case TLType.AccountRegisterDevice: return (T)(Object)new ITLAccountRegisterDevice(from);
				case TLType.AccountUnregisterDevice: return (T)(Object)new ITLAccountUnregisterDevice(from);
				case TLType.AccountUpdateNotifySettings: return (T)(Object)new ITLAccountUpdateNotifySettings(from);
				case TLType.AccountGetNotifySettings: return (T)(Object)new ITLAccountGetNotifySettings(from);
				case TLType.AccountResetNotifySettings: return (T)(Object)new ITLAccountResetNotifySettings(from);
				case TLType.AccountUpdateProfile: return (T)(Object)new ITLAccountUpdateProfile(from);
				case TLType.AccountUpdateStatus: return (T)(Object)new ITLAccountUpdateStatus(from);
				case TLType.AccountGetWallPapers: return (T)(Object)new ITLAccountGetWallPapers(from);
				case TLType.AccountReportPeer: return (T)(Object)new ITLAccountReportPeer(from);
				case TLType.AccountCheckUsername: return (T)(Object)new ITLAccountCheckUsername(from);
				case TLType.AccountUpdateUsername: return (T)(Object)new ITLAccountUpdateUsername(from);
				case TLType.AccountGetPrivacy: return (T)(Object)new ITLAccountGetPrivacy(from);
				case TLType.AccountSetPrivacy: return (T)(Object)new ITLAccountSetPrivacy(from);
				case TLType.AccountDeleteAccount: return (T)(Object)new ITLAccountDeleteAccount(from);
				case TLType.AccountGetAccountTTL: return (T)(Object)new ITLAccountGetAccountTTL(from);
				case TLType.AccountSetAccountTTL: return (T)(Object)new ITLAccountSetAccountTTL(from);
				case TLType.AccountSendChangePhoneCode: return (T)(Object)new ITLAccountSendChangePhoneCode(from);
				case TLType.AccountChangePhone: return (T)(Object)new ITLAccountChangePhone(from);
				case TLType.AccountUpdateDeviceLocked: return (T)(Object)new ITLAccountUpdateDeviceLocked(from);
				case TLType.AccountGetAuthorizations: return (T)(Object)new ITLAccountGetAuthorizations(from);
				case TLType.AccountResetAuthorization: return (T)(Object)new ITLAccountResetAuthorization(from);
				case TLType.AccountGetPassword: return (T)(Object)new ITLAccountGetPassword(from);
				case TLType.AccountGetPasswordSettings: return (T)(Object)new ITLAccountGetPasswordSettings(from);
				case TLType.AccountUpdatePasswordSettings: return (T)(Object)new ITLAccountUpdatePasswordSettings(from);
				case TLType.AccountSendConfirmPhoneCode: return (T)(Object)new ITLAccountSendConfirmPhoneCode(from);
				case TLType.AccountConfirmPhone: return (T)(Object)new ITLAccountConfirmPhone(from);
				case TLType.AccountGetTmpPassword: return (T)(Object)new ITLAccountGetTmpPassword(from);
				case TLType.UsersGetUsers: return (T)(Object)new ITLUsersGetUsers(from);
				case TLType.UsersGetFullUser: return (T)(Object)new ITLUsersGetFullUser(from);
				case TLType.ContactsGetStatuses: return (T)(Object)new ITLContactsGetStatuses(from);
				case TLType.ContactsGetContacts: return (T)(Object)new ITLContactsGetContacts(from);
				case TLType.ContactsImportContacts: return (T)(Object)new ITLContactsImportContacts(from);
				case TLType.ContactsDeleteContact: return (T)(Object)new ITLContactsDeleteContact(from);
				case TLType.ContactsDeleteContacts: return (T)(Object)new ITLContactsDeleteContacts(from);
				case TLType.ContactsBlock: return (T)(Object)new ITLContactsBlock(from);
				case TLType.ContactsUnblock: return (T)(Object)new ITLContactsUnblock(from);
				case TLType.ContactsGetBlocked: return (T)(Object)new ITLContactsGetBlocked(from);
				case TLType.ContactsExportCard: return (T)(Object)new ITLContactsExportCard(from);
				case TLType.ContactsImportCard: return (T)(Object)new ITLContactsImportCard(from);
				case TLType.ContactsSearch: return (T)(Object)new ITLContactsSearch(from);
				case TLType.ContactsResolveUsername: return (T)(Object)new ITLContactsResolveUsername(from);
				case TLType.ContactsGetTopPeers: return (T)(Object)new ITLContactsGetTopPeers(from);
				case TLType.ContactsResetTopPeerRating: return (T)(Object)new ITLContactsResetTopPeerRating(from);
				case TLType.MessagesGetMessages: return (T)(Object)new ITLMessagesGetMessages(from);
				case TLType.MessagesGetDialogs: return (T)(Object)new ITLMessagesGetDialogs(from);
				case TLType.MessagesGetHistory: return (T)(Object)new ITLMessagesGetHistory(from);
				case TLType.MessagesSearch: return (T)(Object)new ITLMessagesSearch(from);
				case TLType.MessagesReadHistory: return (T)(Object)new ITLMessagesReadHistory(from);
				case TLType.MessagesDeleteHistory: return (T)(Object)new ITLMessagesDeleteHistory(from);
				case TLType.MessagesDeleteMessages: return (T)(Object)new ITLMessagesDeleteMessages(from);
				case TLType.MessagesReceivedMessages: return (T)(Object)new ITLMessagesReceivedMessages(from);
				case TLType.MessagesSetTyping: return (T)(Object)new ITLMessagesSetTyping(from);
				case TLType.MessagesSendMessage: return (T)(Object)new ITLMessagesSendMessage(from);
				case TLType.MessagesSendMedia: return (T)(Object)new ITLMessagesSendMedia(from);
				case TLType.MessagesForwardMessages: return (T)(Object)new ITLMessagesForwardMessages(from);
				case TLType.MessagesReportSpam: return (T)(Object)new ITLMessagesReportSpam(from);
				case TLType.MessagesHideReportSpam: return (T)(Object)new ITLMessagesHideReportSpam(from);
				case TLType.MessagesGetPeerSettings: return (T)(Object)new ITLMessagesGetPeerSettings(from);
				case TLType.MessagesGetChats: return (T)(Object)new ITLMessagesGetChats(from);
				case TLType.MessagesGetFullChat: return (T)(Object)new ITLMessagesGetFullChat(from);
				case TLType.MessagesEditChatTitle: return (T)(Object)new ITLMessagesEditChatTitle(from);
				case TLType.MessagesEditChatPhoto: return (T)(Object)new ITLMessagesEditChatPhoto(from);
				case TLType.MessagesAddChatUser: return (T)(Object)new ITLMessagesAddChatUser(from);
				case TLType.MessagesDeleteChatUser: return (T)(Object)new ITLMessagesDeleteChatUser(from);
				case TLType.MessagesCreateChat: return (T)(Object)new ITLMessagesCreateChat(from);
				case TLType.MessagesForwardMessage: return (T)(Object)new ITLMessagesForwardMessage(from);
				case TLType.MessagesGetDHConfig: return (T)(Object)new ITLMessagesGetDHConfig(from);
				case TLType.MessagesRequestEncryption: return (T)(Object)new ITLMessagesRequestEncryption(from);
				case TLType.MessagesAcceptEncryption: return (T)(Object)new ITLMessagesAcceptEncryption(from);
				case TLType.MessagesDiscardEncryption: return (T)(Object)new ITLMessagesDiscardEncryption(from);
				case TLType.MessagesSetEncryptedTyping: return (T)(Object)new ITLMessagesSetEncryptedTyping(from);
				case TLType.MessagesReadEncryptedHistory: return (T)(Object)new ITLMessagesReadEncryptedHistory(from);
				case TLType.MessagesSendEncrypted: return (T)(Object)new ITLMessagesSendEncrypted(from);
				case TLType.MessagesSendEncryptedFile: return (T)(Object)new ITLMessagesSendEncryptedFile(from);
				case TLType.MessagesSendEncryptedService: return (T)(Object)new ITLMessagesSendEncryptedService(from);
				case TLType.MessagesReceivedQueue: return (T)(Object)new ITLMessagesReceivedQueue(from);
				case TLType.MessagesReportEncryptedSpam: return (T)(Object)new ITLMessagesReportEncryptedSpam(from);
				case TLType.MessagesReadMessageContents: return (T)(Object)new ITLMessagesReadMessageContents(from);
				case TLType.MessagesGetAllStickers: return (T)(Object)new ITLMessagesGetAllStickers(from);
				case TLType.MessagesGetWebPagePreview: return (T)(Object)new ITLMessagesGetWebPagePreview(from);
				case TLType.MessagesExportChatInvite: return (T)(Object)new ITLMessagesExportChatInvite(from);
				case TLType.MessagesCheckChatInvite: return (T)(Object)new ITLMessagesCheckChatInvite(from);
				case TLType.MessagesImportChatInvite: return (T)(Object)new ITLMessagesImportChatInvite(from);
				case TLType.MessagesGetStickerSet: return (T)(Object)new ITLMessagesGetStickerSet(from);
				case TLType.MessagesInstallStickerSet: return (T)(Object)new ITLMessagesInstallStickerSet(from);
				case TLType.MessagesUninstallStickerSet: return (T)(Object)new ITLMessagesUninstallStickerSet(from);
				case TLType.MessagesStartBot: return (T)(Object)new ITLMessagesStartBot(from);
				case TLType.MessagesGetMessagesViews: return (T)(Object)new ITLMessagesGetMessagesViews(from);
				case TLType.MessagesToggleChatAdmins: return (T)(Object)new ITLMessagesToggleChatAdmins(from);
				case TLType.MessagesEditChatAdmin: return (T)(Object)new ITLMessagesEditChatAdmin(from);
				case TLType.MessagesMigrateChat: return (T)(Object)new ITLMessagesMigrateChat(from);
				case TLType.MessagesSearchGlobal: return (T)(Object)new ITLMessagesSearchGlobal(from);
				case TLType.MessagesReorderStickerSets: return (T)(Object)new ITLMessagesReorderStickerSets(from);
				case TLType.MessagesGetDocumentByHash: return (T)(Object)new ITLMessagesGetDocumentByHash(from);
				case TLType.MessagesSearchGifs: return (T)(Object)new ITLMessagesSearchGifs(from);
				case TLType.MessagesGetSavedGifs: return (T)(Object)new ITLMessagesGetSavedGifs(from);
				case TLType.MessagesSaveGif: return (T)(Object)new ITLMessagesSaveGif(from);
				case TLType.MessagesGetInlineBotResults: return (T)(Object)new ITLMessagesGetInlineBotResults(from);
				case TLType.MessagesSetInlineBotResults: return (T)(Object)new ITLMessagesSetInlineBotResults(from);
				case TLType.MessagesSendInlineBotResult: return (T)(Object)new ITLMessagesSendInlineBotResult(from);
				case TLType.MessagesGetMessageEditData: return (T)(Object)new ITLMessagesGetMessageEditData(from);
				case TLType.MessagesEditMessage: return (T)(Object)new ITLMessagesEditMessage(from);
				case TLType.MessagesEditInlineBotMessage: return (T)(Object)new ITLMessagesEditInlineBotMessage(from);
				case TLType.MessagesGetBotCallbackAnswer: return (T)(Object)new ITLMessagesGetBotCallbackAnswer(from);
				case TLType.MessagesSetBotCallbackAnswer: return (T)(Object)new ITLMessagesSetBotCallbackAnswer(from);
				case TLType.MessagesGetPeerDialogs: return (T)(Object)new ITLMessagesGetPeerDialogs(from);
				case TLType.MessagesSaveDraft: return (T)(Object)new ITLMessagesSaveDraft(from);
				case TLType.MessagesGetAllDrafts: return (T)(Object)new ITLMessagesGetAllDrafts(from);
				case TLType.MessagesGetFeaturedStickers: return (T)(Object)new ITLMessagesGetFeaturedStickers(from);
				case TLType.MessagesReadFeaturedStickers: return (T)(Object)new ITLMessagesReadFeaturedStickers(from);
				case TLType.MessagesGetRecentStickers: return (T)(Object)new ITLMessagesGetRecentStickers(from);
				case TLType.MessagesSaveRecentSticker: return (T)(Object)new ITLMessagesSaveRecentSticker(from);
				case TLType.MessagesClearRecentStickers: return (T)(Object)new ITLMessagesClearRecentStickers(from);
				case TLType.MessagesGetArchivedStickers: return (T)(Object)new ITLMessagesGetArchivedStickers(from);
				case TLType.MessagesGetMaskStickers: return (T)(Object)new ITLMessagesGetMaskStickers(from);
				case TLType.MessagesGetAttachedStickers: return (T)(Object)new ITLMessagesGetAttachedStickers(from);
				case TLType.MessagesSetGameScore: return (T)(Object)new ITLMessagesSetGameScore(from);
				case TLType.MessagesSetInlineGameScore: return (T)(Object)new ITLMessagesSetInlineGameScore(from);
				case TLType.MessagesGetGameHighScores: return (T)(Object)new ITLMessagesGetGameHighScores(from);
				case TLType.MessagesGetInlineGameHighScores: return (T)(Object)new ITLMessagesGetInlineGameHighScores(from);
				case TLType.MessagesGetCommonChats: return (T)(Object)new ITLMessagesGetCommonChats(from);
				case TLType.MessagesGetAllChats: return (T)(Object)new ITLMessagesGetAllChats(from);
				case TLType.MessagesGetWebPage: return (T)(Object)new ITLMessagesGetWebPage(from);
				case TLType.MessagesToggleDialogPin: return (T)(Object)new ITLMessagesToggleDialogPin(from);
				case TLType.MessagesReorderPinnedDialogs: return (T)(Object)new ITLMessagesReorderPinnedDialogs(from);
				case TLType.MessagesGetPinnedDialogs: return (T)(Object)new ITLMessagesGetPinnedDialogs(from);
				case TLType.MessagesSetBotShippingResults: return (T)(Object)new ITLMessagesSetBotShippingResults(from);
				case TLType.MessagesSetBotPrecheckoutResults: return (T)(Object)new ITLMessagesSetBotPrecheckoutResults(from);
				case TLType.UpdatesGetState: return (T)(Object)new ITLUpdatesGetState(from);
				case TLType.UpdatesGetDifference: return (T)(Object)new ITLUpdatesGetDifference(from);
				case TLType.UpdatesGetChannelDifference: return (T)(Object)new ITLUpdatesGetChannelDifference(from);
				case TLType.PhotosUpdateProfilePhoto: return (T)(Object)new ITLPhotosUpdateProfilePhoto(from);
				case TLType.PhotosUploadProfilePhoto: return (T)(Object)new ITLPhotosUploadProfilePhoto(from);
				case TLType.PhotosDeletePhotos: return (T)(Object)new ITLPhotosDeletePhotos(from);
				case TLType.PhotosGetUserPhotos: return (T)(Object)new ITLPhotosGetUserPhotos(from);
				case TLType.UploadSaveFilePart: return (T)(Object)new ITLUploadSaveFilePart(from);
				case TLType.UploadGetFile: return (T)(Object)new ITLUploadGetFile(from);
				case TLType.UploadSaveBigFilePart: return (T)(Object)new ITLUploadSaveBigFilePart(from);
				case TLType.UploadGetWebFile: return (T)(Object)new ITLUploadGetWebFile(from);
				case TLType.HelpGetConfig: return (T)(Object)new ITLHelpGetConfig(from);
				case TLType.HelpGetNearestDC: return (T)(Object)new ITLHelpGetNearestDC(from);
				case TLType.HelpGetAppUpdate: return (T)(Object)new ITLHelpGetAppUpdate(from);
				case TLType.HelpSaveAppLog: return (T)(Object)new ITLHelpSaveAppLog(from);
				case TLType.HelpGetInviteText: return (T)(Object)new ITLHelpGetInviteText(from);
				case TLType.HelpGetSupport: return (T)(Object)new ITLHelpGetSupport(from);
				case TLType.HelpGetAppChangelog: return (T)(Object)new ITLHelpGetAppChangelog(from);
				case TLType.HelpGetTermsOfService: return (T)(Object)new ITLHelpGetTermsOfService(from);
				case TLType.HelpSetBotUpdatesStatus: return (T)(Object)new ITLHelpSetBotUpdatesStatus(from);
				case TLType.ChannelsReadHistory: return (T)(Object)new ITLChannelsReadHistory(from);
				case TLType.ChannelsDeleteMessages: return (T)(Object)new ITLChannelsDeleteMessages(from);
				case TLType.ChannelsDeleteUserHistory: return (T)(Object)new ITLChannelsDeleteUserHistory(from);
				case TLType.ChannelsReportSpam: return (T)(Object)new ITLChannelsReportSpam(from);
				case TLType.ChannelsGetMessages: return (T)(Object)new ITLChannelsGetMessages(from);
				case TLType.ChannelsGetParticipants: return (T)(Object)new ITLChannelsGetParticipants(from);
				case TLType.ChannelsGetParticipant: return (T)(Object)new ITLChannelsGetParticipant(from);
				case TLType.ChannelsGetChannels: return (T)(Object)new ITLChannelsGetChannels(from);
				case TLType.ChannelsGetFullChannel: return (T)(Object)new ITLChannelsGetFullChannel(from);
				case TLType.ChannelsCreateChannel: return (T)(Object)new ITLChannelsCreateChannel(from);
				case TLType.ChannelsEditAbout: return (T)(Object)new ITLChannelsEditAbout(from);
				case TLType.ChannelsEditAdmin: return (T)(Object)new ITLChannelsEditAdmin(from);
				case TLType.ChannelsEditTitle: return (T)(Object)new ITLChannelsEditTitle(from);
				case TLType.ChannelsEditPhoto: return (T)(Object)new ITLChannelsEditPhoto(from);
				case TLType.ChannelsCheckUsername: return (T)(Object)new ITLChannelsCheckUsername(from);
				case TLType.ChannelsUpdateUsername: return (T)(Object)new ITLChannelsUpdateUsername(from);
				case TLType.ChannelsJoinChannel: return (T)(Object)new ITLChannelsJoinChannel(from);
				case TLType.ChannelsLeaveChannel: return (T)(Object)new ITLChannelsLeaveChannel(from);
				case TLType.ChannelsInviteToChannel: return (T)(Object)new ITLChannelsInviteToChannel(from);
				case TLType.ChannelsKickFromChannel: return (T)(Object)new ITLChannelsKickFromChannel(from);
				case TLType.ChannelsExportInvite: return (T)(Object)new ITLChannelsExportInvite(from);
				case TLType.ChannelsDeleteChannel: return (T)(Object)new ITLChannelsDeleteChannel(from);
				case TLType.ChannelsToggleInvites: return (T)(Object)new ITLChannelsToggleInvites(from);
				case TLType.ChannelsExportMessageLink: return (T)(Object)new ITLChannelsExportMessageLink(from);
				case TLType.ChannelsToggleSignatures: return (T)(Object)new ITLChannelsToggleSignatures(from);
				case TLType.ChannelsUpdatePinnedMessage: return (T)(Object)new ITLChannelsUpdatePinnedMessage(from);
				case TLType.ChannelsGetAdminedPublicChannels: return (T)(Object)new ITLChannelsGetAdminedPublicChannels(from);
				case TLType.BotsSendCustomRequest: return (T)(Object)new ITLBotsSendCustomRequest(from);
				case TLType.BotsAnswerWebhookJSONQuery: return (T)(Object)new ITLBotsAnswerWebhookJSONQuery(from);
				case TLType.PaymentsGetPaymentForm: return (T)(Object)new ITLPaymentsGetPaymentForm(from);
				case TLType.PaymentsGetPaymentReceipt: return (T)(Object)new ITLPaymentsGetPaymentReceipt(from);
				case TLType.PaymentsValidateRequestedInfo: return (T)(Object)new ITLPaymentsValidateRequestedInfo(from);
				case TLType.PaymentsSendPaymentForm: return (T)(Object)new ITLPaymentsSendPaymentForm(from);
				case TLType.PaymentsGetSavedInfo: return (T)(Object)new ITLPaymentsGetSavedInfo(from);
				case TLType.PaymentsClearSavedInfo: return (T)(Object)new ITLPaymentsClearSavedInfo(from);
				case TLType.PhoneGetCallConfig: return (T)(Object)new ITLPhoneGetCallConfig(from);
				case TLType.PhoneRequestCall: return (T)(Object)new ITLPhoneRequestCall(from);
				case TLType.PhoneAcceptCall: return (T)(Object)new ITLPhoneAcceptCall(from);
				case TLType.PhoneConfirmCall: return (T)(Object)new ITLPhoneConfirmCall(from);
				case TLType.PhoneReceivedCall: return (T)(Object)new ITLPhoneReceivedCall(from);
				case TLType.PhoneDiscardCall: return (T)(Object)new ITLPhoneDiscardCall(from);
				case TLType.PhoneSetCallRating: return (T)(Object)new ITLPhoneSetCallRating(from);
				case TLType.PhoneSaveCallDebug: return (T)(Object)new ITLPhoneSaveCallDebug(from);
				case TLType.ResPQ: return (T)(Object)new ITLResPQ(from);
				case TLType.PQInnerData: return (T)(Object)new ITLPQInnerData(from);
				case TLType.ServerDHParamsFail: return (T)(Object)new ITLServerDHParamsFail(from);
				case TLType.ServerDHParamsOk: return (T)(Object)new ITLServerDHParamsOk(from);
				case TLType.ServerDHInnerData: return (T)(Object)new ITLServerDHInnerData(from);
				case TLType.ClientDHInnerData: return (T)(Object)new ITLClientDHInnerData(from);
				case TLType.DHGenOk: return (T)(Object)new ITLDHGenOk(from);
				case TLType.DHGenRetry: return (T)(Object)new ITLDHGenRetry(from);
				case TLType.DHGenFail: return (T)(Object)new ITLDHGenFail(from);
				case TLType.DestroyAuthKeyOk: return (T)(Object)new ITLDestroyAuthKeyOk(from);
				case TLType.DestroyAuthKeyNone: return (T)(Object)new ITLDestroyAuthKeyNone(from);
				case TLType.DestroyAuthKeyFail: return (T)(Object)new ITLDestroyAuthKeyFail(from);
				case TLType.MsgsAck: return (T)(Object)new ITLMsgsAck(from);
				case TLType.BadMsgNotification: return (T)(Object)new ITLBadMsgNotification(from);
				case TLType.BadServerSalt: return (T)(Object)new ITLBadServerSalt(from);
				case TLType.MsgsStateReq: return (T)(Object)new ITLMsgsStateReq(from);
				case TLType.MsgsStateInfo: return (T)(Object)new ITLMsgsStateInfo(from);
				case TLType.MsgsAllInfo: return (T)(Object)new ITLMsgsAllInfo(from);
				case TLType.MsgDetailedInfo: return (T)(Object)new ITLMsgDetailedInfo(from);
				case TLType.MsgNewDetailedInfo: return (T)(Object)new ITLMsgNewDetailedInfo(from);
				case TLType.MsgResendReq: return (T)(Object)new ITLMsgResendReq(from);
				case TLType.RPCError: return (T)(Object)new ITLRPCError(from);
				case TLType.RPCAnswerUnknown: return (T)(Object)new ITLRPCAnswerUnknown(from);
				case TLType.RPCAnswerDroppedRunning: return (T)(Object)new ITLRPCAnswerDroppedRunning(from);
				case TLType.RPCAnswerDropped: return (T)(Object)new ITLRPCAnswerDropped(from);
				case TLType.FutureSalt: return (T)(Object)new ITLFutureSalt(from);
				case TLType.FutureSalts: return (T)(Object)new ITLFutureSalts(from);
				case TLType.Pong: return (T)(Object)new ITLPong(from);
				case TLType.DestroySessionOk: return (T)(Object)new ITLDestroySessionOk(from);
				case TLType.DestroySessionNone: return (T)(Object)new ITLDestroySessionNone(from);
				case TLType.NewSessionCreated: return (T)(Object)new ITLNewSessionCreated(from);
				case TLType.HttpWait: return (T)(Object)new ITLHttpWait(from);
				case TLType.Error: return (T)(Object)new ITLError(from);
				case TLType.InputPeerEmpty: return (T)(Object)new ITLInputPeerEmpty(from);
				case TLType.InputPeerSelf: return (T)(Object)new ITLInputPeerSelf(from);
				case TLType.InputPeerChat: return (T)(Object)new ITLInputPeerChat(from);
				case TLType.InputPeerUser: return (T)(Object)new ITLInputPeerUser(from);
				case TLType.InputPeerChannel: return (T)(Object)new ITLInputPeerChannel(from);
				case TLType.InputUserEmpty: return (T)(Object)new ITLInputUserEmpty(from);
				case TLType.InputUserSelf: return (T)(Object)new ITLInputUserSelf(from);
				case TLType.InputUser: return (T)(Object)new ITLInputUser(from);
				case TLType.InputPhoneContact: return (T)(Object)new ITLInputPhoneContact(from);
				case TLType.InputFile: return (T)(Object)new ITLInputFile(from);
				case TLType.InputFileBig: return (T)(Object)new ITLInputFileBig(from);
				case TLType.InputMediaEmpty: return (T)(Object)new ITLInputMediaEmpty(from);
				case TLType.InputMediaUploadedPhoto: return (T)(Object)new ITLInputMediaUploadedPhoto(from);
				case TLType.InputMediaPhoto: return (T)(Object)new ITLInputMediaPhoto(from);
				case TLType.InputMediaGeoPoint: return (T)(Object)new ITLInputMediaGeoPoint(from);
				case TLType.InputMediaContact: return (T)(Object)new ITLInputMediaContact(from);
				case TLType.InputMediaUploadedDocument: return (T)(Object)new ITLInputMediaUploadedDocument(from);
				case TLType.InputMediaUploadedThumbDocument: return (T)(Object)new ITLInputMediaUploadedThumbDocument(from);
				case TLType.InputMediaDocument: return (T)(Object)new ITLInputMediaDocument(from);
				case TLType.InputMediaVenue: return (T)(Object)new ITLInputMediaVenue(from);
				case TLType.InputMediaGifExternal: return (T)(Object)new ITLInputMediaGifExternal(from);
				case TLType.InputMediaPhotoExternal: return (T)(Object)new ITLInputMediaPhotoExternal(from);
				case TLType.InputMediaDocumentExternal: return (T)(Object)new ITLInputMediaDocumentExternal(from);
				case TLType.InputMediaGame: return (T)(Object)new ITLInputMediaGame(from);
				case TLType.InputMediaInvoice: return (T)(Object)new ITLInputMediaInvoice(from);
				case TLType.InputChatPhotoEmpty: return (T)(Object)new ITLInputChatPhotoEmpty(from);
				case TLType.InputChatUploadedPhoto: return (T)(Object)new ITLInputChatUploadedPhoto(from);
				case TLType.InputChatPhoto: return (T)(Object)new ITLInputChatPhoto(from);
				case TLType.InputGeoPointEmpty: return (T)(Object)new ITLInputGeoPointEmpty(from);
				case TLType.InputGeoPoint: return (T)(Object)new ITLInputGeoPoint(from);
				case TLType.InputPhotoEmpty: return (T)(Object)new ITLInputPhotoEmpty(from);
				case TLType.InputPhoto: return (T)(Object)new ITLInputPhoto(from);
				case TLType.InputFileLocation: return (T)(Object)new ITLInputFileLocation(from);
				case TLType.InputEncryptedFileLocation: return (T)(Object)new ITLInputEncryptedFileLocation(from);
				case TLType.InputDocumentFileLocation: return (T)(Object)new ITLInputDocumentFileLocation(from);
				case TLType.InputAppEvent: return (T)(Object)new ITLInputAppEvent(from);
				case TLType.PeerUser: return (T)(Object)new ITLPeerUser(from);
				case TLType.PeerChat: return (T)(Object)new ITLPeerChat(from);
				case TLType.PeerChannel: return (T)(Object)new ITLPeerChannel(from);
				case TLType.StorageFileUnknown: return (T)(Object)new ITLStorageFileUnknown(from);
				case TLType.StorageFilePartial: return (T)(Object)new ITLStorageFilePartial(from);
				case TLType.StorageFileJpeg: return (T)(Object)new ITLStorageFileJpeg(from);
				case TLType.StorageFileGif: return (T)(Object)new ITLStorageFileGif(from);
				case TLType.StorageFilePng: return (T)(Object)new ITLStorageFilePng(from);
				case TLType.StorageFilePdf: return (T)(Object)new ITLStorageFilePdf(from);
				case TLType.StorageFileMp3: return (T)(Object)new ITLStorageFileMp3(from);
				case TLType.StorageFileMov: return (T)(Object)new ITLStorageFileMov(from);
				case TLType.StorageFileMp4: return (T)(Object)new ITLStorageFileMp4(from);
				case TLType.StorageFileWebp: return (T)(Object)new ITLStorageFileWebp(from);
				case TLType.FileLocationUnavailable: return (T)(Object)new ITLFileLocationUnavailable(from);
				case TLType.FileLocation: return (T)(Object)new ITLFileLocation(from);
				case TLType.UserEmpty: return (T)(Object)new ITLUserEmpty(from);
				case TLType.User: return (T)(Object)new ITLUser(from);
				case TLType.UserProfilePhotoEmpty: return (T)(Object)new ITLUserProfilePhotoEmpty(from);
				case TLType.UserProfilePhoto: return (T)(Object)new ITLUserProfilePhoto(from);
				case TLType.UserStatusEmpty: return (T)(Object)new ITLUserStatusEmpty(from);
				case TLType.UserStatusOnline: return (T)(Object)new ITLUserStatusOnline(from);
				case TLType.UserStatusOffline: return (T)(Object)new ITLUserStatusOffline(from);
				case TLType.UserStatusRecently: return (T)(Object)new ITLUserStatusRecently(from);
				case TLType.UserStatusLastWeek: return (T)(Object)new ITLUserStatusLastWeek(from);
				case TLType.UserStatusLastMonth: return (T)(Object)new ITLUserStatusLastMonth(from);
				case TLType.ChatEmpty: return (T)(Object)new ITLChatEmpty(from);
				case TLType.Chat: return (T)(Object)new ITLChat(from);
				case TLType.ChatForbidden: return (T)(Object)new ITLChatForbidden(from);
				case TLType.Channel: return (T)(Object)new ITLChannel(from);
				case TLType.ChannelForbidden: return (T)(Object)new ITLChannelForbidden(from);
				case TLType.ChatFull: return (T)(Object)new ITLChatFull(from);
				case TLType.ChannelFull: return (T)(Object)new ITLChannelFull(from);
				case TLType.ChatParticipant: return (T)(Object)new ITLChatParticipant(from);
				case TLType.ChatParticipantCreator: return (T)(Object)new ITLChatParticipantCreator(from);
				case TLType.ChatParticipantAdmin: return (T)(Object)new ITLChatParticipantAdmin(from);
				case TLType.ChatParticipantsForbidden: return (T)(Object)new ITLChatParticipantsForbidden(from);
				case TLType.ChatParticipants: return (T)(Object)new ITLChatParticipants(from);
				case TLType.ChatPhotoEmpty: return (T)(Object)new ITLChatPhotoEmpty(from);
				case TLType.ChatPhoto: return (T)(Object)new ITLChatPhoto(from);
				case TLType.MessageEmpty: return (T)(Object)new ITLMessageEmpty(from);
				case TLType.MessageMediaEmpty: return (T)(Object)new ITLMessageMediaEmpty(from);
				case TLType.MessageMediaPhoto: return (T)(Object)new ITLMessageMediaPhoto(from);
				case TLType.MessageMediaGeo: return (T)(Object)new ITLMessageMediaGeo(from);
				case TLType.MessageMediaContact: return (T)(Object)new ITLMessageMediaContact(from);
				case TLType.MessageMediaUnsupported: return (T)(Object)new ITLMessageMediaUnsupported(from);
				case TLType.MessageMediaDocument: return (T)(Object)new ITLMessageMediaDocument(from);
				case TLType.MessageMediaWebPage: return (T)(Object)new ITLMessageMediaWebPage(from);
				case TLType.MessageMediaVenue: return (T)(Object)new ITLMessageMediaVenue(from);
				case TLType.MessageMediaGame: return (T)(Object)new ITLMessageMediaGame(from);
				case TLType.MessageMediaInvoice: return (T)(Object)new ITLMessageMediaInvoice(from);
				case TLType.MessageActionEmpty: return (T)(Object)new ITLMessageActionEmpty(from);
				case TLType.MessageActionChatCreate: return (T)(Object)new ITLMessageActionChatCreate(from);
				case TLType.MessageActionChatEditTitle: return (T)(Object)new ITLMessageActionChatEditTitle(from);
				case TLType.MessageActionChatEditPhoto: return (T)(Object)new ITLMessageActionChatEditPhoto(from);
				case TLType.MessageActionChatDeletePhoto: return (T)(Object)new ITLMessageActionChatDeletePhoto(from);
				case TLType.MessageActionChatAddUser: return (T)(Object)new ITLMessageActionChatAddUser(from);
				case TLType.MessageActionChatDeleteUser: return (T)(Object)new ITLMessageActionChatDeleteUser(from);
				case TLType.MessageActionChatJoinedByLink: return (T)(Object)new ITLMessageActionChatJoinedByLink(from);
				case TLType.MessageActionChannelCreate: return (T)(Object)new ITLMessageActionChannelCreate(from);
				case TLType.MessageActionChatMigrateTo: return (T)(Object)new ITLMessageActionChatMigrateTo(from);
				case TLType.MessageActionChannelMigrateFrom: return (T)(Object)new ITLMessageActionChannelMigrateFrom(from);
				case TLType.MessageActionPinMessage: return (T)(Object)new ITLMessageActionPinMessage(from);
				case TLType.MessageActionHistoryClear: return (T)(Object)new ITLMessageActionHistoryClear(from);
				case TLType.MessageActionGameScore: return (T)(Object)new ITLMessageActionGameScore(from);
				case TLType.MessageActionPaymentSentMe: return (T)(Object)new ITLMessageActionPaymentSentMe(from);
				case TLType.MessageActionPaymentSent: return (T)(Object)new ITLMessageActionPaymentSent(from);
				case TLType.MessageActionPhoneCall: return (T)(Object)new ITLMessageActionPhoneCall(from);
				case TLType.Dialog: return (T)(Object)new ITLDialog(from);
				case TLType.PhotoEmpty: return (T)(Object)new ITLPhotoEmpty(from);
				case TLType.Photo: return (T)(Object)new ITLPhoto(from);
				case TLType.PhotoSizeEmpty: return (T)(Object)new ITLPhotoSizeEmpty(from);
				case TLType.PhotoSize: return (T)(Object)new ITLPhotoSize(from);
				case TLType.PhotoCachedSize: return (T)(Object)new ITLPhotoCachedSize(from);
				case TLType.GeoPointEmpty: return (T)(Object)new ITLGeoPointEmpty(from);
				case TLType.GeoPoint: return (T)(Object)new ITLGeoPoint(from);
				case TLType.AuthCheckedPhone: return (T)(Object)new ITLAuthCheckedPhone(from);
				case TLType.AuthSentCode: return (T)(Object)new ITLAuthSentCode(from);
				case TLType.AuthAuthorization: return (T)(Object)new ITLAuthAuthorization(from);
				case TLType.AuthExportedAuthorization: return (T)(Object)new ITLAuthExportedAuthorization(from);
				case TLType.InputNotifyPeer: return (T)(Object)new ITLInputNotifyPeer(from);
				case TLType.InputNotifyUsers: return (T)(Object)new ITLInputNotifyUsers(from);
				case TLType.InputNotifyChats: return (T)(Object)new ITLInputNotifyChats(from);
				case TLType.InputNotifyAll: return (T)(Object)new ITLInputNotifyAll(from);
				case TLType.InputPeerNotifyEventsEmpty: return (T)(Object)new ITLInputPeerNotifyEventsEmpty(from);
				case TLType.InputPeerNotifyEventsAll: return (T)(Object)new ITLInputPeerNotifyEventsAll(from);
				case TLType.InputPeerNotifySettings: return (T)(Object)new ITLInputPeerNotifySettings(from);
				case TLType.PeerNotifyEventsEmpty: return (T)(Object)new ITLPeerNotifyEventsEmpty(from);
				case TLType.PeerNotifyEventsAll: return (T)(Object)new ITLPeerNotifyEventsAll(from);
				case TLType.PeerNotifySettingsEmpty: return (T)(Object)new ITLPeerNotifySettingsEmpty(from);
				case TLType.PeerNotifySettings: return (T)(Object)new ITLPeerNotifySettings(from);
				case TLType.PeerSettings: return (T)(Object)new ITLPeerSettings(from);
				case TLType.WallPaper: return (T)(Object)new ITLWallPaper(from);
				case TLType.WallPaperSolid: return (T)(Object)new ITLWallPaperSolid(from);
				case TLType.InputReportReasonSpam: return (T)(Object)new ITLInputReportReasonSpam(from);
				case TLType.InputReportReasonViolence: return (T)(Object)new ITLInputReportReasonViolence(from);
				case TLType.InputReportReasonPornography: return (T)(Object)new ITLInputReportReasonPornography(from);
				case TLType.InputReportReasonOther: return (T)(Object)new ITLInputReportReasonOther(from);
				case TLType.UserFull: return (T)(Object)new ITLUserFull(from);
				case TLType.Contact: return (T)(Object)new ITLContact(from);
				case TLType.ImportedContact: return (T)(Object)new ITLImportedContact(from);
				case TLType.ContactBlocked: return (T)(Object)new ITLContactBlocked(from);
				case TLType.ContactStatus: return (T)(Object)new ITLContactStatus(from);
				case TLType.ContactsLink: return (T)(Object)new ITLContactsLink(from);
				case TLType.ContactsContactsNotModified: return (T)(Object)new ITLContactsContactsNotModified(from);
				case TLType.ContactsContacts: return (T)(Object)new ITLContactsContacts(from);
				case TLType.ContactsImportedContacts: return (T)(Object)new ITLContactsImportedContacts(from);
				case TLType.ContactsBlocked: return (T)(Object)new ITLContactsBlocked(from);
				case TLType.ContactsBlockedSlice: return (T)(Object)new ITLContactsBlockedSlice(from);
				case TLType.MessagesDialogs: return (T)(Object)new ITLMessagesDialogs(from);
				case TLType.MessagesDialogsSlice: return (T)(Object)new ITLMessagesDialogsSlice(from);
				case TLType.MessagesMessages: return (T)(Object)new ITLMessagesMessages(from);
				case TLType.MessagesMessagesSlice: return (T)(Object)new ITLMessagesMessagesSlice(from);
				case TLType.MessagesChannelMessages: return (T)(Object)new ITLMessagesChannelMessages(from);
				case TLType.MessagesChats: return (T)(Object)new ITLMessagesChats(from);
				case TLType.MessagesChatsSlice: return (T)(Object)new ITLMessagesChatsSlice(from);
				case TLType.MessagesChatFull: return (T)(Object)new ITLMessagesChatFull(from);
				case TLType.MessagesAffectedHistory: return (T)(Object)new ITLMessagesAffectedHistory(from);
				case TLType.InputMessagesFilterEmpty: return (T)(Object)new ITLInputMessagesFilterEmpty(from);
				case TLType.InputMessagesFilterPhotos: return (T)(Object)new ITLInputMessagesFilterPhotos(from);
				case TLType.InputMessagesFilterVideo: return (T)(Object)new ITLInputMessagesFilterVideo(from);
				case TLType.InputMessagesFilterPhotoVideo: return (T)(Object)new ITLInputMessagesFilterPhotoVideo(from);
				case TLType.InputMessagesFilterPhotoVideoDocuments: return (T)(Object)new ITLInputMessagesFilterPhotoVideoDocuments(from);
				case TLType.InputMessagesFilterDocument: return (T)(Object)new ITLInputMessagesFilterDocument(from);
				case TLType.InputMessagesFilterUrl: return (T)(Object)new ITLInputMessagesFilterUrl(from);
				case TLType.InputMessagesFilterGif: return (T)(Object)new ITLInputMessagesFilterGif(from);
				case TLType.InputMessagesFilterVoice: return (T)(Object)new ITLInputMessagesFilterVoice(from);
				case TLType.InputMessagesFilterMusic: return (T)(Object)new ITLInputMessagesFilterMusic(from);
				case TLType.InputMessagesFilterChatPhotos: return (T)(Object)new ITLInputMessagesFilterChatPhotos(from);
				case TLType.InputMessagesFilterPhoneCalls: return (T)(Object)new ITLInputMessagesFilterPhoneCalls(from);
				case TLType.UpdateNewMessage: return (T)(Object)new ITLUpdateNewMessage(from);
				case TLType.UpdateMessageID: return (T)(Object)new ITLUpdateMessageID(from);
				case TLType.UpdateDeleteMessages: return (T)(Object)new ITLUpdateDeleteMessages(from);
				case TLType.UpdateUserTyping: return (T)(Object)new ITLUpdateUserTyping(from);
				case TLType.UpdateChatUserTyping: return (T)(Object)new ITLUpdateChatUserTyping(from);
				case TLType.UpdateChatParticipants: return (T)(Object)new ITLUpdateChatParticipants(from);
				case TLType.UpdateUserStatus: return (T)(Object)new ITLUpdateUserStatus(from);
				case TLType.UpdateUserName: return (T)(Object)new ITLUpdateUserName(from);
				case TLType.UpdateUserPhoto: return (T)(Object)new ITLUpdateUserPhoto(from);
				case TLType.UpdateContactRegistered: return (T)(Object)new ITLUpdateContactRegistered(from);
				case TLType.UpdateContactLink: return (T)(Object)new ITLUpdateContactLink(from);
				case TLType.UpdateNewEncryptedMessage: return (T)(Object)new ITLUpdateNewEncryptedMessage(from);
				case TLType.UpdateEncryptedChatTyping: return (T)(Object)new ITLUpdateEncryptedChatTyping(from);
				case TLType.UpdateEncryption: return (T)(Object)new ITLUpdateEncryption(from);
				case TLType.UpdateEncryptedMessagesRead: return (T)(Object)new ITLUpdateEncryptedMessagesRead(from);
				case TLType.UpdateChatParticipantAdd: return (T)(Object)new ITLUpdateChatParticipantAdd(from);
				case TLType.UpdateChatParticipantDelete: return (T)(Object)new ITLUpdateChatParticipantDelete(from);
				case TLType.UpdateDCOptions: return (T)(Object)new ITLUpdateDCOptions(from);
				case TLType.UpdateUserBlocked: return (T)(Object)new ITLUpdateUserBlocked(from);
				case TLType.UpdateNotifySettings: return (T)(Object)new ITLUpdateNotifySettings(from);
				case TLType.UpdateServiceNotification: return (T)(Object)new ITLUpdateServiceNotification(from);
				case TLType.UpdatePrivacy: return (T)(Object)new ITLUpdatePrivacy(from);
				case TLType.UpdateUserPhone: return (T)(Object)new ITLUpdateUserPhone(from);
				case TLType.UpdateReadHistoryInbox: return (T)(Object)new ITLUpdateReadHistoryInbox(from);
				case TLType.UpdateReadHistoryOutbox: return (T)(Object)new ITLUpdateReadHistoryOutbox(from);
				case TLType.UpdateWebPage: return (T)(Object)new ITLUpdateWebPage(from);
				case TLType.UpdateReadMessagesContents: return (T)(Object)new ITLUpdateReadMessagesContents(from);
				case TLType.UpdateChannelTooLong: return (T)(Object)new ITLUpdateChannelTooLong(from);
				case TLType.UpdateChannel: return (T)(Object)new ITLUpdateChannel(from);
				case TLType.UpdateNewChannelMessage: return (T)(Object)new ITLUpdateNewChannelMessage(from);
				case TLType.UpdateReadChannelInbox: return (T)(Object)new ITLUpdateReadChannelInbox(from);
				case TLType.UpdateDeleteChannelMessages: return (T)(Object)new ITLUpdateDeleteChannelMessages(from);
				case TLType.UpdateChannelMessageViews: return (T)(Object)new ITLUpdateChannelMessageViews(from);
				case TLType.UpdateChatAdmins: return (T)(Object)new ITLUpdateChatAdmins(from);
				case TLType.UpdateChatParticipantAdmin: return (T)(Object)new ITLUpdateChatParticipantAdmin(from);
				case TLType.UpdateNewStickerSet: return (T)(Object)new ITLUpdateNewStickerSet(from);
				case TLType.UpdateStickerSetsOrder: return (T)(Object)new ITLUpdateStickerSetsOrder(from);
				case TLType.UpdateStickerSets: return (T)(Object)new ITLUpdateStickerSets(from);
				case TLType.UpdateSavedGifs: return (T)(Object)new ITLUpdateSavedGifs(from);
				case TLType.UpdateBotInlineQuery: return (T)(Object)new ITLUpdateBotInlineQuery(from);
				case TLType.UpdateBotInlineSend: return (T)(Object)new ITLUpdateBotInlineSend(from);
				case TLType.UpdateEditChannelMessage: return (T)(Object)new ITLUpdateEditChannelMessage(from);
				case TLType.UpdateChannelPinnedMessage: return (T)(Object)new ITLUpdateChannelPinnedMessage(from);
				case TLType.UpdateBotCallbackQuery: return (T)(Object)new ITLUpdateBotCallbackQuery(from);
				case TLType.UpdateEditMessage: return (T)(Object)new ITLUpdateEditMessage(from);
				case TLType.UpdateInlineBotCallbackQuery: return (T)(Object)new ITLUpdateInlineBotCallbackQuery(from);
				case TLType.UpdateReadChannelOutbox: return (T)(Object)new ITLUpdateReadChannelOutbox(from);
				case TLType.UpdateDraftMessage: return (T)(Object)new ITLUpdateDraftMessage(from);
				case TLType.UpdateReadFeaturedStickers: return (T)(Object)new ITLUpdateReadFeaturedStickers(from);
				case TLType.UpdateRecentStickers: return (T)(Object)new ITLUpdateRecentStickers(from);
				case TLType.UpdateConfig: return (T)(Object)new ITLUpdateConfig(from);
				case TLType.UpdatePtsChanged: return (T)(Object)new ITLUpdatePtsChanged(from);
				case TLType.UpdateChannelWebPage: return (T)(Object)new ITLUpdateChannelWebPage(from);
				case TLType.UpdateDialogPinned: return (T)(Object)new ITLUpdateDialogPinned(from);
				case TLType.UpdatePinnedDialogs: return (T)(Object)new ITLUpdatePinnedDialogs(from);
				case TLType.UpdateBotWebhookJSON: return (T)(Object)new ITLUpdateBotWebhookJSON(from);
				case TLType.UpdateBotWebhookJSONQuery: return (T)(Object)new ITLUpdateBotWebhookJSONQuery(from);
				case TLType.UpdateBotShippingQuery: return (T)(Object)new ITLUpdateBotShippingQuery(from);
				case TLType.UpdateBotPrecheckoutQuery: return (T)(Object)new ITLUpdateBotPrecheckoutQuery(from);
				case TLType.UpdatePhoneCall: return (T)(Object)new ITLUpdatePhoneCall(from);
				case TLType.UpdatesState: return (T)(Object)new ITLUpdatesState(from);
				case TLType.UpdatesDifferenceEmpty: return (T)(Object)new ITLUpdatesDifferenceEmpty(from);
				case TLType.UpdatesDifference: return (T)(Object)new ITLUpdatesDifference(from);
				case TLType.UpdatesDifferenceSlice: return (T)(Object)new ITLUpdatesDifferenceSlice(from);
				case TLType.UpdatesDifferenceTooLong: return (T)(Object)new ITLUpdatesDifferenceTooLong(from);
				case TLType.UpdatesTooLong: return (T)(Object)new ITLUpdatesTooLong(from);
				case TLType.UpdateShortMessage: return (T)(Object)new ITLUpdateShortMessage(from);
				case TLType.UpdateShortChatMessage: return (T)(Object)new ITLUpdateShortChatMessage(from);
				case TLType.UpdateShort: return (T)(Object)new ITLUpdateShort(from);
				case TLType.UpdatesCombined: return (T)(Object)new ITLUpdatesCombined(from);
				case TLType.Updates: return (T)(Object)new ITLUpdates(from);
				case TLType.UpdateShortSentMessage: return (T)(Object)new ITLUpdateShortSentMessage(from);
				case TLType.PhotosPhotos: return (T)(Object)new ITLPhotosPhotos(from);
				case TLType.PhotosPhotosSlice: return (T)(Object)new ITLPhotosPhotosSlice(from);
				case TLType.PhotosPhoto: return (T)(Object)new ITLPhotosPhoto(from);
				case TLType.UploadFile: return (T)(Object)new ITLUploadFile(from);
				case TLType.DCOption: return (T)(Object)new ITLDCOption(from);
				case TLType.Config: return (T)(Object)new ITLConfig(from);
				case TLType.NearestDC: return (T)(Object)new ITLNearestDC(from);
				case TLType.HelpAppUpdate: return (T)(Object)new ITLHelpAppUpdate(from);
				case TLType.HelpNoAppUpdate: return (T)(Object)new ITLHelpNoAppUpdate(from);
				case TLType.HelpInviteText: return (T)(Object)new ITLHelpInviteText(from);
				case TLType.EncryptedChatEmpty: return (T)(Object)new ITLEncryptedChatEmpty(from);
				case TLType.EncryptedChatWaiting: return (T)(Object)new ITLEncryptedChatWaiting(from);
				case TLType.EncryptedChatRequested: return (T)(Object)new ITLEncryptedChatRequested(from);
				case TLType.EncryptedChat: return (T)(Object)new ITLEncryptedChat(from);
				case TLType.EncryptedChatDiscarded: return (T)(Object)new ITLEncryptedChatDiscarded(from);
				case TLType.InputEncryptedChat: return (T)(Object)new ITLInputEncryptedChat(from);
				case TLType.EncryptedFileEmpty: return (T)(Object)new ITLEncryptedFileEmpty(from);
				case TLType.EncryptedFile: return (T)(Object)new ITLEncryptedFile(from);
				case TLType.InputEncryptedFileEmpty: return (T)(Object)new ITLInputEncryptedFileEmpty(from);
				case TLType.InputEncryptedFileUploaded: return (T)(Object)new ITLInputEncryptedFileUploaded(from);
				case TLType.InputEncryptedFile: return (T)(Object)new ITLInputEncryptedFile(from);
				case TLType.InputEncryptedFileBigUploaded: return (T)(Object)new ITLInputEncryptedFileBigUploaded(from);
				case TLType.EncryptedMessage: return (T)(Object)new ITLEncryptedMessage(from);
				case TLType.EncryptedMessageService: return (T)(Object)new ITLEncryptedMessageService(from);
				case TLType.MessagesDHConfigNotModified: return (T)(Object)new ITLMessagesDHConfigNotModified(from);
				case TLType.MessagesDHConfig: return (T)(Object)new ITLMessagesDHConfig(from);
				case TLType.MessagesSentEncryptedMessage: return (T)(Object)new ITLMessagesSentEncryptedMessage(from);
				case TLType.MessagesSentEncryptedFile: return (T)(Object)new ITLMessagesSentEncryptedFile(from);
				case TLType.InputDocumentEmpty: return (T)(Object)new ITLInputDocumentEmpty(from);
				case TLType.InputDocument: return (T)(Object)new ITLInputDocument(from);
				case TLType.DocumentEmpty: return (T)(Object)new ITLDocumentEmpty(from);
				case TLType.Document: return (T)(Object)new ITLDocument(from);
				case TLType.HelpSupport: return (T)(Object)new ITLHelpSupport(from);
				case TLType.NotifyPeer: return (T)(Object)new ITLNotifyPeer(from);
				case TLType.NotifyUsers: return (T)(Object)new ITLNotifyUsers(from);
				case TLType.NotifyChats: return (T)(Object)new ITLNotifyChats(from);
				case TLType.NotifyAll: return (T)(Object)new ITLNotifyAll(from);
				case TLType.SendMessageTypingAction: return (T)(Object)new ITLSendMessageTypingAction(from);
				case TLType.SendMessageCancelAction: return (T)(Object)new ITLSendMessageCancelAction(from);
				case TLType.SendMessageRecordVideoAction: return (T)(Object)new ITLSendMessageRecordVideoAction(from);
				case TLType.SendMessageUploadVideoAction: return (T)(Object)new ITLSendMessageUploadVideoAction(from);
				case TLType.SendMessageRecordAudioAction: return (T)(Object)new ITLSendMessageRecordAudioAction(from);
				case TLType.SendMessageUploadAudioAction: return (T)(Object)new ITLSendMessageUploadAudioAction(from);
				case TLType.SendMessageUploadPhotoAction: return (T)(Object)new ITLSendMessageUploadPhotoAction(from);
				case TLType.SendMessageUploadDocumentAction: return (T)(Object)new ITLSendMessageUploadDocumentAction(from);
				case TLType.SendMessageGeoLocationAction: return (T)(Object)new ITLSendMessageGeoLocationAction(from);
				case TLType.SendMessageChooseContactAction: return (T)(Object)new ITLSendMessageChooseContactAction(from);
				case TLType.SendMessageGamePlayAction: return (T)(Object)new ITLSendMessageGamePlayAction(from);
				case TLType.ContactsFound: return (T)(Object)new ITLContactsFound(from);
				case TLType.InputPrivacyKeyStatusTimestamp: return (T)(Object)new ITLInputPrivacyKeyStatusTimestamp(from);
				case TLType.InputPrivacyKeyChatInvite: return (T)(Object)new ITLInputPrivacyKeyChatInvite(from);
				case TLType.InputPrivacyKeyPhoneCall: return (T)(Object)new ITLInputPrivacyKeyPhoneCall(from);
				case TLType.PrivacyKeyStatusTimestamp: return (T)(Object)new ITLPrivacyKeyStatusTimestamp(from);
				case TLType.PrivacyKeyChatInvite: return (T)(Object)new ITLPrivacyKeyChatInvite(from);
				case TLType.PrivacyKeyPhoneCall: return (T)(Object)new ITLPrivacyKeyPhoneCall(from);
				case TLType.InputPrivacyValueAllowContacts: return (T)(Object)new ITLInputPrivacyValueAllowContacts(from);
				case TLType.InputPrivacyValueAllowAll: return (T)(Object)new ITLInputPrivacyValueAllowAll(from);
				case TLType.InputPrivacyValueAllowUsers: return (T)(Object)new ITLInputPrivacyValueAllowUsers(from);
				case TLType.InputPrivacyValueDisallowContacts: return (T)(Object)new ITLInputPrivacyValueDisallowContacts(from);
				case TLType.InputPrivacyValueDisallowAll: return (T)(Object)new ITLInputPrivacyValueDisallowAll(from);
				case TLType.InputPrivacyValueDisallowUsers: return (T)(Object)new ITLInputPrivacyValueDisallowUsers(from);
				case TLType.PrivacyValueAllowContacts: return (T)(Object)new ITLPrivacyValueAllowContacts(from);
				case TLType.PrivacyValueAllowAll: return (T)(Object)new ITLPrivacyValueAllowAll(from);
				case TLType.PrivacyValueAllowUsers: return (T)(Object)new ITLPrivacyValueAllowUsers(from);
				case TLType.PrivacyValueDisallowContacts: return (T)(Object)new ITLPrivacyValueDisallowContacts(from);
				case TLType.PrivacyValueDisallowAll: return (T)(Object)new ITLPrivacyValueDisallowAll(from);
				case TLType.PrivacyValueDisallowUsers: return (T)(Object)new ITLPrivacyValueDisallowUsers(from);
				case TLType.AccountPrivacyRules: return (T)(Object)new ITLAccountPrivacyRules(from);
				case TLType.AccountDaysTTL: return (T)(Object)new ITLAccountDaysTTL(from);
				case TLType.DocumentAttributeImageSize: return (T)(Object)new ITLDocumentAttributeImageSize(from);
				case TLType.DocumentAttributeAnimated: return (T)(Object)new ITLDocumentAttributeAnimated(from);
				case TLType.DocumentAttributeSticker: return (T)(Object)new ITLDocumentAttributeSticker(from);
				case TLType.DocumentAttributeVideo: return (T)(Object)new ITLDocumentAttributeVideo(from);
				case TLType.DocumentAttributeAudio: return (T)(Object)new ITLDocumentAttributeAudio(from);
				case TLType.DocumentAttributeFilename: return (T)(Object)new ITLDocumentAttributeFilename(from);
				case TLType.DocumentAttributeHasStickers: return (T)(Object)new ITLDocumentAttributeHasStickers(from);
				case TLType.MessagesStickersNotModified: return (T)(Object)new ITLMessagesStickersNotModified(from);
				case TLType.MessagesStickers: return (T)(Object)new ITLMessagesStickers(from);
				case TLType.StickerPack: return (T)(Object)new ITLStickerPack(from);
				case TLType.MessagesAllStickersNotModified: return (T)(Object)new ITLMessagesAllStickersNotModified(from);
				case TLType.MessagesAllStickers: return (T)(Object)new ITLMessagesAllStickers(from);
				case TLType.DisabledFeature: return (T)(Object)new ITLDisabledFeature(from);
				case TLType.MessagesAffectedMessages: return (T)(Object)new ITLMessagesAffectedMessages(from);
				case TLType.ContactLinkUnknown: return (T)(Object)new ITLContactLinkUnknown(from);
				case TLType.ContactLinkNone: return (T)(Object)new ITLContactLinkNone(from);
				case TLType.ContactLinkHasPhone: return (T)(Object)new ITLContactLinkHasPhone(from);
				case TLType.ContactLinkContact: return (T)(Object)new ITLContactLinkContact(from);
				case TLType.WebPageEmpty: return (T)(Object)new ITLWebPageEmpty(from);
				case TLType.WebPagePending: return (T)(Object)new ITLWebPagePending(from);
				case TLType.WebPage: return (T)(Object)new ITLWebPage(from);
				case TLType.WebPageNotModified: return (T)(Object)new ITLWebPageNotModified(from);
				case TLType.Authorization: return (T)(Object)new ITLAuthorization(from);
				case TLType.AccountAuthorizations: return (T)(Object)new ITLAccountAuthorizations(from);
				case TLType.AccountNoPassword: return (T)(Object)new ITLAccountNoPassword(from);
				case TLType.AccountPassword: return (T)(Object)new ITLAccountPassword(from);
				case TLType.AccountPasswordSettings: return (T)(Object)new ITLAccountPasswordSettings(from);
				case TLType.AccountPasswordInputSettings: return (T)(Object)new ITLAccountPasswordInputSettings(from);
				case TLType.AuthPasswordRecovery: return (T)(Object)new ITLAuthPasswordRecovery(from);
				case TLType.ReceivedNotifyMessage: return (T)(Object)new ITLReceivedNotifyMessage(from);
				case TLType.ChatInviteEmpty: return (T)(Object)new ITLChatInviteEmpty(from);
				case TLType.ChatInviteExported: return (T)(Object)new ITLChatInviteExported(from);
				case TLType.ChatInviteAlready: return (T)(Object)new ITLChatInviteAlready(from);
				case TLType.ChatInvite: return (T)(Object)new ITLChatInvite(from);
				case TLType.InputStickerSetEmpty: return (T)(Object)new ITLInputStickerSetEmpty(from);
				case TLType.InputStickerSetID: return (T)(Object)new ITLInputStickerSetID(from);
				case TLType.InputStickerSetShortName: return (T)(Object)new ITLInputStickerSetShortName(from);
				case TLType.StickerSet: return (T)(Object)new ITLStickerSet(from);
				case TLType.MessagesStickerSet: return (T)(Object)new ITLMessagesStickerSet(from);
				case TLType.BotCommand: return (T)(Object)new ITLBotCommand(from);
				case TLType.BotInfo: return (T)(Object)new ITLBotInfo(from);
				case TLType.KeyboardButton: return (T)(Object)new ITLKeyboardButton(from);
				case TLType.KeyboardButtonUrl: return (T)(Object)new ITLKeyboardButtonUrl(from);
				case TLType.KeyboardButtonCallback: return (T)(Object)new ITLKeyboardButtonCallback(from);
				case TLType.KeyboardButtonRequestPhone: return (T)(Object)new ITLKeyboardButtonRequestPhone(from);
				case TLType.KeyboardButtonRequestGeoLocation: return (T)(Object)new ITLKeyboardButtonRequestGeoLocation(from);
				case TLType.KeyboardButtonSwitchInline: return (T)(Object)new ITLKeyboardButtonSwitchInline(from);
				case TLType.KeyboardButtonGame: return (T)(Object)new ITLKeyboardButtonGame(from);
				case TLType.KeyboardButtonBuy: return (T)(Object)new ITLKeyboardButtonBuy(from);
				case TLType.KeyboardButtonRow: return (T)(Object)new ITLKeyboardButtonRow(from);
				case TLType.ReplyKeyboardHide: return (T)(Object)new ITLReplyKeyboardHide(from);
				case TLType.ReplyKeyboardForceReply: return (T)(Object)new ITLReplyKeyboardForceReply(from);
				case TLType.ReplyKeyboardMarkup: return (T)(Object)new ITLReplyKeyboardMarkup(from);
				case TLType.ReplyInlineMarkup: return (T)(Object)new ITLReplyInlineMarkup(from);
				case TLType.MessageEntityUnknown: return (T)(Object)new ITLMessageEntityUnknown(from);
				case TLType.MessageEntityMention: return (T)(Object)new ITLMessageEntityMention(from);
				case TLType.MessageEntityHashtag: return (T)(Object)new ITLMessageEntityHashtag(from);
				case TLType.MessageEntityBotCommand: return (T)(Object)new ITLMessageEntityBotCommand(from);
				case TLType.MessageEntityUrl: return (T)(Object)new ITLMessageEntityUrl(from);
				case TLType.MessageEntityEmail: return (T)(Object)new ITLMessageEntityEmail(from);
				case TLType.MessageEntityBold: return (T)(Object)new ITLMessageEntityBold(from);
				case TLType.MessageEntityItalic: return (T)(Object)new ITLMessageEntityItalic(from);
				case TLType.MessageEntityCode: return (T)(Object)new ITLMessageEntityCode(from);
				case TLType.MessageEntityPre: return (T)(Object)new ITLMessageEntityPre(from);
				case TLType.MessageEntityTextUrl: return (T)(Object)new ITLMessageEntityTextUrl(from);
				case TLType.MessageEntityMentionName: return (T)(Object)new ITLMessageEntityMentionName(from);
				case TLType.InputMessageEntityMentionName: return (T)(Object)new ITLInputMessageEntityMentionName(from);
				case TLType.InputChannelEmpty: return (T)(Object)new ITLInputChannelEmpty(from);
				case TLType.InputChannel: return (T)(Object)new ITLInputChannel(from);
				case TLType.ContactsResolvedPeer: return (T)(Object)new ITLContactsResolvedPeer(from);
				case TLType.MessageRange: return (T)(Object)new ITLMessageRange(from);
				case TLType.UpdatesChannelDifferenceEmpty: return (T)(Object)new ITLUpdatesChannelDifferenceEmpty(from);
				case TLType.UpdatesChannelDifferenceTooLong: return (T)(Object)new ITLUpdatesChannelDifferenceTooLong(from);
				case TLType.UpdatesChannelDifference: return (T)(Object)new ITLUpdatesChannelDifference(from);
				case TLType.ChannelMessagesFilterEmpty: return (T)(Object)new ITLChannelMessagesFilterEmpty(from);
				case TLType.ChannelMessagesFilter: return (T)(Object)new ITLChannelMessagesFilter(from);
				case TLType.ChannelParticipant: return (T)(Object)new ITLChannelParticipant(from);
				case TLType.ChannelParticipantSelf: return (T)(Object)new ITLChannelParticipantSelf(from);
				case TLType.ChannelParticipantModerator: return (T)(Object)new ITLChannelParticipantModerator(from);
				case TLType.ChannelParticipantEditor: return (T)(Object)new ITLChannelParticipantEditor(from);
				case TLType.ChannelParticipantKicked: return (T)(Object)new ITLChannelParticipantKicked(from);
				case TLType.ChannelParticipantCreator: return (T)(Object)new ITLChannelParticipantCreator(from);
				case TLType.ChannelParticipantsRecent: return (T)(Object)new ITLChannelParticipantsRecent(from);
				case TLType.ChannelParticipantsAdmins: return (T)(Object)new ITLChannelParticipantsAdmins(from);
				case TLType.ChannelParticipantsKicked: return (T)(Object)new ITLChannelParticipantsKicked(from);
				case TLType.ChannelParticipantsBots: return (T)(Object)new ITLChannelParticipantsBots(from);
				case TLType.ChannelRoleEmpty: return (T)(Object)new ITLChannelRoleEmpty(from);
				case TLType.ChannelRoleModerator: return (T)(Object)new ITLChannelRoleModerator(from);
				case TLType.ChannelRoleEditor: return (T)(Object)new ITLChannelRoleEditor(from);
				case TLType.ChannelsChannelParticipants: return (T)(Object)new ITLChannelsChannelParticipants(from);
				case TLType.ChannelsChannelParticipant: return (T)(Object)new ITLChannelsChannelParticipant(from);
				case TLType.HelpTermsOfService: return (T)(Object)new ITLHelpTermsOfService(from);
				case TLType.FoundGif: return (T)(Object)new ITLFoundGif(from);
				case TLType.FoundGifCached: return (T)(Object)new ITLFoundGifCached(from);
				case TLType.MessagesFoundGifs: return (T)(Object)new ITLMessagesFoundGifs(from);
				case TLType.MessagesSavedGifsNotModified: return (T)(Object)new ITLMessagesSavedGifsNotModified(from);
				case TLType.MessagesSavedGifs: return (T)(Object)new ITLMessagesSavedGifs(from);
				case TLType.InputBotInlineMessageMediaAuto: return (T)(Object)new ITLInputBotInlineMessageMediaAuto(from);
				case TLType.InputBotInlineMessageText: return (T)(Object)new ITLInputBotInlineMessageText(from);
				case TLType.InputBotInlineMessageMediaGeo: return (T)(Object)new ITLInputBotInlineMessageMediaGeo(from);
				case TLType.InputBotInlineMessageMediaVenue: return (T)(Object)new ITLInputBotInlineMessageMediaVenue(from);
				case TLType.InputBotInlineMessageMediaContact: return (T)(Object)new ITLInputBotInlineMessageMediaContact(from);
				case TLType.InputBotInlineMessageGame: return (T)(Object)new ITLInputBotInlineMessageGame(from);
				case TLType.InputBotInlineResult: return (T)(Object)new ITLInputBotInlineResult(from);
				case TLType.InputBotInlineResultPhoto: return (T)(Object)new ITLInputBotInlineResultPhoto(from);
				case TLType.InputBotInlineResultDocument: return (T)(Object)new ITLInputBotInlineResultDocument(from);
				case TLType.InputBotInlineResultGame: return (T)(Object)new ITLInputBotInlineResultGame(from);
				case TLType.BotInlineMessageMediaAuto: return (T)(Object)new ITLBotInlineMessageMediaAuto(from);
				case TLType.BotInlineMessageText: return (T)(Object)new ITLBotInlineMessageText(from);
				case TLType.BotInlineMessageMediaGeo: return (T)(Object)new ITLBotInlineMessageMediaGeo(from);
				case TLType.BotInlineMessageMediaVenue: return (T)(Object)new ITLBotInlineMessageMediaVenue(from);
				case TLType.BotInlineMessageMediaContact: return (T)(Object)new ITLBotInlineMessageMediaContact(from);
				case TLType.BotInlineResult: return (T)(Object)new ITLBotInlineResult(from);
				case TLType.BotInlineMediaResult: return (T)(Object)new ITLBotInlineMediaResult(from);
				case TLType.MessagesBotResults: return (T)(Object)new ITLMessagesBotResults(from);
				case TLType.ExportedMessageLink: return (T)(Object)new ITLExportedMessageLink(from);
				case TLType.MessageFwdHeader: return (T)(Object)new ITLMessageFwdHeader(from);
				case TLType.AuthCodeTypeSms: return (T)(Object)new ITLAuthCodeTypeSms(from);
				case TLType.AuthCodeTypeCall: return (T)(Object)new ITLAuthCodeTypeCall(from);
				case TLType.AuthCodeTypeFlashCall: return (T)(Object)new ITLAuthCodeTypeFlashCall(from);
				case TLType.AuthSentCodeTypeApp: return (T)(Object)new ITLAuthSentCodeTypeApp(from);
				case TLType.AuthSentCodeTypeSms: return (T)(Object)new ITLAuthSentCodeTypeSms(from);
				case TLType.AuthSentCodeTypeCall: return (T)(Object)new ITLAuthSentCodeTypeCall(from);
				case TLType.AuthSentCodeTypeFlashCall: return (T)(Object)new ITLAuthSentCodeTypeFlashCall(from);
				case TLType.MessagesBotCallbackAnswer: return (T)(Object)new ITLMessagesBotCallbackAnswer(from);
				case TLType.MessagesMessageEditData: return (T)(Object)new ITLMessagesMessageEditData(from);
				case TLType.InputBotInlineMessageID: return (T)(Object)new ITLInputBotInlineMessageID(from);
				case TLType.InlineBotSwitchPM: return (T)(Object)new ITLInlineBotSwitchPM(from);
				case TLType.MessagesPeerDialogs: return (T)(Object)new ITLMessagesPeerDialogs(from);
				case TLType.TopPeer: return (T)(Object)new ITLTopPeer(from);
				case TLType.TopPeerCategoryBotsPM: return (T)(Object)new ITLTopPeerCategoryBotsPM(from);
				case TLType.TopPeerCategoryBotsInline: return (T)(Object)new ITLTopPeerCategoryBotsInline(from);
				case TLType.TopPeerCategoryCorrespondents: return (T)(Object)new ITLTopPeerCategoryCorrespondents(from);
				case TLType.TopPeerCategoryGroups: return (T)(Object)new ITLTopPeerCategoryGroups(from);
				case TLType.TopPeerCategoryChannels: return (T)(Object)new ITLTopPeerCategoryChannels(from);
				case TLType.TopPeerCategoryPeers: return (T)(Object)new ITLTopPeerCategoryPeers(from);
				case TLType.ContactsTopPeersNotModified: return (T)(Object)new ITLContactsTopPeersNotModified(from);
				case TLType.ContactsTopPeers: return (T)(Object)new ITLContactsTopPeers(from);
				case TLType.DraftMessageEmpty: return (T)(Object)new ITLDraftMessageEmpty(from);
				case TLType.DraftMessage: return (T)(Object)new ITLDraftMessage(from);
				case TLType.MessagesFeaturedStickersNotModified: return (T)(Object)new ITLMessagesFeaturedStickersNotModified(from);
				case TLType.MessagesFeaturedStickers: return (T)(Object)new ITLMessagesFeaturedStickers(from);
				case TLType.MessagesRecentStickersNotModified: return (T)(Object)new ITLMessagesRecentStickersNotModified(from);
				case TLType.MessagesRecentStickers: return (T)(Object)new ITLMessagesRecentStickers(from);
				case TLType.MessagesArchivedStickers: return (T)(Object)new ITLMessagesArchivedStickers(from);
				case TLType.MessagesStickerSetInstallResultSuccess: return (T)(Object)new ITLMessagesStickerSetInstallResultSuccess(from);
				case TLType.MessagesStickerSetInstallResultArchive: return (T)(Object)new ITLMessagesStickerSetInstallResultArchive(from);
				case TLType.StickerSetCovered: return (T)(Object)new ITLStickerSetCovered(from);
				case TLType.StickerSetMultiCovered: return (T)(Object)new ITLStickerSetMultiCovered(from);
				case TLType.MaskCoords: return (T)(Object)new ITLMaskCoords(from);
				case TLType.InputStickeredMediaPhoto: return (T)(Object)new ITLInputStickeredMediaPhoto(from);
				case TLType.InputStickeredMediaDocument: return (T)(Object)new ITLInputStickeredMediaDocument(from);
				case TLType.Game: return (T)(Object)new ITLGame(from);
				case TLType.InputGameID: return (T)(Object)new ITLInputGameID(from);
				case TLType.InputGameShortName: return (T)(Object)new ITLInputGameShortName(from);
				case TLType.HighScore: return (T)(Object)new ITLHighScore(from);
				case TLType.MessagesHighScores: return (T)(Object)new ITLMessagesHighScores(from);
				case TLType.TextEmpty: return (T)(Object)new ITLTextEmpty(from);
				case TLType.TextPlain: return (T)(Object)new ITLTextPlain(from);
				case TLType.TextBold: return (T)(Object)new ITLTextBold(from);
				case TLType.TextItalic: return (T)(Object)new ITLTextItalic(from);
				case TLType.TextUnderline: return (T)(Object)new ITLTextUnderline(from);
				case TLType.TextStrike: return (T)(Object)new ITLTextStrike(from);
				case TLType.TextFixed: return (T)(Object)new ITLTextFixed(from);
				case TLType.TextUrl: return (T)(Object)new ITLTextUrl(from);
				case TLType.TextEmail: return (T)(Object)new ITLTextEmail(from);
				case TLType.TextConcat: return (T)(Object)new ITLTextConcat(from);
				case TLType.PageBlockUnsupported: return (T)(Object)new ITLPageBlockUnsupported(from);
				case TLType.PageBlockTitle: return (T)(Object)new ITLPageBlockTitle(from);
				case TLType.PageBlockSubtitle: return (T)(Object)new ITLPageBlockSubtitle(from);
				case TLType.PageBlockAuthorDate: return (T)(Object)new ITLPageBlockAuthorDate(from);
				case TLType.PageBlockHeader: return (T)(Object)new ITLPageBlockHeader(from);
				case TLType.PageBlockSubheader: return (T)(Object)new ITLPageBlockSubheader(from);
				case TLType.PageBlockParagraph: return (T)(Object)new ITLPageBlockParagraph(from);
				case TLType.PageBlockPreformatted: return (T)(Object)new ITLPageBlockPreformatted(from);
				case TLType.PageBlockFooter: return (T)(Object)new ITLPageBlockFooter(from);
				case TLType.PageBlockDivider: return (T)(Object)new ITLPageBlockDivider(from);
				case TLType.PageBlockAnchor: return (T)(Object)new ITLPageBlockAnchor(from);
				case TLType.PageBlockList: return (T)(Object)new ITLPageBlockList(from);
				case TLType.PageBlockBlockquote: return (T)(Object)new ITLPageBlockBlockquote(from);
				case TLType.PageBlockPullquote: return (T)(Object)new ITLPageBlockPullquote(from);
				case TLType.PageBlockPhoto: return (T)(Object)new ITLPageBlockPhoto(from);
				case TLType.PageBlockVideo: return (T)(Object)new ITLPageBlockVideo(from);
				case TLType.PageBlockCover: return (T)(Object)new ITLPageBlockCover(from);
				case TLType.PageBlockEmbed: return (T)(Object)new ITLPageBlockEmbed(from);
				case TLType.PageBlockEmbedPost: return (T)(Object)new ITLPageBlockEmbedPost(from);
				case TLType.PageBlockCollage: return (T)(Object)new ITLPageBlockCollage(from);
				case TLType.PageBlockSlideshow: return (T)(Object)new ITLPageBlockSlideshow(from);
				case TLType.PagePart: return (T)(Object)new ITLPagePart(from);
				case TLType.PageFull: return (T)(Object)new ITLPageFull(from);
				case TLType.PhoneCallDiscardReasonMissed: return (T)(Object)new ITLPhoneCallDiscardReasonMissed(from);
				case TLType.PhoneCallDiscardReasonDisconnect: return (T)(Object)new ITLPhoneCallDiscardReasonDisconnect(from);
				case TLType.PhoneCallDiscardReasonHangup: return (T)(Object)new ITLPhoneCallDiscardReasonHangup(from);
				case TLType.PhoneCallDiscardReasonBusy: return (T)(Object)new ITLPhoneCallDiscardReasonBusy(from);
				case TLType.DataJSON: return (T)(Object)new ITLDataJSON(from);
				case TLType.LabeledPrice: return (T)(Object)new ITLLabeledPrice(from);
				case TLType.Invoice: return (T)(Object)new ITLInvoice(from);
				case TLType.PaymentCharge: return (T)(Object)new ITLPaymentCharge(from);
				case TLType.PostAddress: return (T)(Object)new ITLPostAddress(from);
				case TLType.PaymentRequestedInfo: return (T)(Object)new ITLPaymentRequestedInfo(from);
				case TLType.PaymentSavedCredentialsCard: return (T)(Object)new ITLPaymentSavedCredentialsCard(from);
				case TLType.WebDocument: return (T)(Object)new ITLWebDocument(from);
				case TLType.InputWebDocument: return (T)(Object)new ITLInputWebDocument(from);
				case TLType.InputWebFileLocation: return (T)(Object)new ITLInputWebFileLocation(from);
				case TLType.UploadWebFile: return (T)(Object)new ITLUploadWebFile(from);
				case TLType.PaymentsPaymentForm: return (T)(Object)new ITLPaymentsPaymentForm(from);
				case TLType.PaymentsValidatedRequestedInfo: return (T)(Object)new ITLPaymentsValidatedRequestedInfo(from);
				case TLType.PaymentsPaymentResult: return (T)(Object)new ITLPaymentsPaymentResult(from);
				case TLType.PaymentsPaymentVerficationNeeded: return (T)(Object)new ITLPaymentsPaymentVerficationNeeded(from);
				case TLType.PaymentsPaymentReceipt: return (T)(Object)new ITLPaymentsPaymentReceipt(from);
				case TLType.PaymentsSavedInfo: return (T)(Object)new ITLPaymentsSavedInfo(from);
				case TLType.InputPaymentCredentialsSaved: return (T)(Object)new ITLInputPaymentCredentialsSaved(from);
				case TLType.InputPaymentCredentials: return (T)(Object)new ITLInputPaymentCredentials(from);
				case TLType.AccountTmpPassword: return (T)(Object)new ITLAccountTmpPassword(from);
				case TLType.ShippingOption: return (T)(Object)new ITLShippingOption(from);
				case TLType.InputPhoneCall: return (T)(Object)new ITLInputPhoneCall(from);
				case TLType.PhoneCallEmpty: return (T)(Object)new ITLPhoneCallEmpty(from);
				case TLType.PhoneCallWaiting: return (T)(Object)new ITLPhoneCallWaiting(from);
				case TLType.PhoneCallRequested: return (T)(Object)new ITLPhoneCallRequested(from);
				case TLType.PhoneCallAccepted: return (T)(Object)new ITLPhoneCallAccepted(from);
				case TLType.PhoneCall: return (T)(Object)new ITLPhoneCall(from);
				case TLType.PhoneCallDiscarded: return (T)(Object)new ITLPhoneCallDiscarded(from);
				case TLType.PhoneConnection: return (T)(Object)new ITLPhoneConnection(from);
				case TLType.PhoneCallProtocol: return (T)(Object)new ITLPhoneCallProtocol(from);
				case TLType.PhonePhoneCall: return (T)(Object)new ITLPhonePhoneCall(from);
				case TLType.Message: return (T)(Object)new ITLMessage(from);
				case TLType.MessageService: return (T)(Object)new ITLMessageService(from);
				case TLType.RPCResult: return (T)(Object)new ITLRPCResult(from);
				case TLType.MsgContainer: return (T)(Object)new ITLMsgContainer(from);
				case TLType.GzipPacked: return (T)(Object)new ITLGzipPacked(from);
				case TLType.Null: return (T)(Object)null;
				default: throw new InvalidOperationException();
			}
		}
	}
}