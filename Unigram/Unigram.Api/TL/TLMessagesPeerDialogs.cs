// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLMessagesPeerDialogs : ITLObject, TLMessagesPeerDialogs 
	{
		public TLVector<TLDialog> Dialogs { get; set; }
		public TLVector<TLMessageBase> Messages { get; set; }
		public TLVector<TLChatBase> Chats { get; set; }
		public TLVector<TLUserBase> Users { get; set; }
		public TLUpdatesState State { get; set; }

		public ITLMessagesPeerDialogs() { }
		public ITLMessagesPeerDialogs(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.MessagesPeerDialogs; } }

		public override void Read(TLBinaryReader from)
		{
			Dialogs = TLFactory.Read<TLVector<TLDialog>>(from);
			Messages = TLFactory.Read<TLVector<TLMessageBase>>(from);
			Chats = TLFactory.Read<TLVector<TLChatBase>>(from);
			Users = TLFactory.Read<TLVector<TLUserBase>>(from);
			State = TLFactory.Read<TLUpdatesState>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x3371C354);
			to.WriteObject(Dialogs);
			to.WriteObject(Messages);
			to.WriteObject(Chats);
			to.WriteObject(Users);
			to.WriteObject(State);
		}
	}

#if !PORTABLE
	[Guid(0x3f13d0f6, 0x673c, 0x82d8, 0x30, 0x01, 0xb3, 0x6d, 0xfd, 0x16, 0x9e, 0xc8)]
	public partial interface TLMessagesPeerDialogs : TLObject
	{
		TLVector<TLDialog> Dialogs { get; set; }
		TLVector<TLMessageBase> Messages { get; set; }
		TLVector<TLChatBase> Chats { get; set; }
		TLVector<TLUserBase> Users { get; set; }
		TLUpdatesState State { get; set; }
	}
#endif

}