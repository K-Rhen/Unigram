// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLChatFull : ITLChatFullBase, TLChatFull 
	{
		public TLChatParticipantsBase Participants { get; set; }

		public ITLChatFull() { }
		public ITLChatFull(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.ChatFull; } }

		public override void Read(TLBinaryReader from)
		{
			Id = from.ReadInt32();
			Participants = TLFactory.Read<TLChatParticipantsBase>(from);
			ChatPhoto = TLFactory.Read<TLPhotoBase>(from);
			NotifySettings = TLFactory.Read<TLPeerNotifySettingsBase>(from);
			ExportedInvite = TLFactory.Read<TLExportedChatInviteBase>(from);
			BotInfo = TLFactory.Read<TLVector<TLBotInfo>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x2E02A614);
			to.Write(Id);
			to.WriteObject(Participants);
			to.WriteObject(ChatPhoto);
			to.WriteObject(NotifySettings);
			to.WriteObject(ExportedInvite);
			to.WriteObject(BotInfo);
		}
	}

#if !PORTABLE
	[Guid(0xbc8a6f0d, 0x9eae, 0x6402, 0xba, 0xb3, 0x83, 0x7c, 0xc3, 0xf6, 0x48, 0x9d)]
	public partial interface TLChatFull : TLChatFullBase
	{
		Int32 Id { get; set; }
		TLChatParticipantsBase Participants { get; set; }
		TLPhotoBase ChatPhoto { get; set; }
		TLPeerNotifySettingsBase NotifySettings { get; set; }
		TLExportedChatInviteBase ExportedInvite { get; set; }
		TLVector<TLBotInfo> BotInfo { get; set; }
	}
#endif

}