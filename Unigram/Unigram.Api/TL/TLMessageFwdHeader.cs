// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLMessageFwdHeader : ITLObject, TLMessageFwdHeader 
	{
		public bool HasFromId { get { return Flags.HasFlag(TLMessageFwdHeaderFlag.FromId); } set { Flags = value ? (Flags | TLMessageFwdHeaderFlag.FromId) : (Flags & ~TLMessageFwdHeaderFlag.FromId); } }
		public bool HasChannelId { get { return Flags.HasFlag(TLMessageFwdHeaderFlag.ChannelId); } set { Flags = value ? (Flags | TLMessageFwdHeaderFlag.ChannelId) : (Flags & ~TLMessageFwdHeaderFlag.ChannelId); } }
		public bool HasChannelPost { get { return Flags.HasFlag(TLMessageFwdHeaderFlag.ChannelPost); } set { Flags = value ? (Flags | TLMessageFwdHeaderFlag.ChannelPost) : (Flags & ~TLMessageFwdHeaderFlag.ChannelPost); } }

		public TLMessageFwdHeaderFlag Flags { get; set; }
		public Int32? FromId { get; set; }
		public Int32 Date { get; set; }
		public Int32? ChannelId { get; set; }
		public Int32? ChannelPost { get; set; }

		public ITLMessageFwdHeader() { }
		public ITLMessageFwdHeader(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.MessageFwdHeader; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLMessageFwdHeaderFlag)from.ReadInt32();
			if (HasFromId) FromId = from.ReadInt32();
			Date = from.ReadInt32();
			if (HasChannelId) ChannelId = from.ReadInt32();
			if (HasChannelPost) ChannelPost = from.ReadInt32();
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0xC786DDCB);
			to.Write((Int32)Flags);
			if (HasFromId) to.Write(FromId.Value);
			to.Write(Date);
			if (HasChannelId) to.Write(ChannelId.Value);
			if (HasChannelPost) to.Write(ChannelPost.Value);
		}

		private void UpdateFlags()
		{
			HasFromId = FromId != null;
			HasChannelId = ChannelId != null;
			HasChannelPost = ChannelPost != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLMessageFwdHeaderFlag : Int32
	{
		FromId = (1 << 0),
		ChannelId = (1 << 1),
		ChannelPost = (1 << 2),
	}
#endif

#if !PORTABLE
	[Guid(0xcf136d6b, 0xb190, 0x13e5, 0x65, 0xd9, 0xe2, 0x73, 0xfc, 0x3c, 0x2d, 0x27)]
	public partial interface TLMessageFwdHeader : TLObject
	{
		bool HasFromId { get; set; }
		bool HasChannelId { get; set; }
		bool HasChannelPost { get; set; }

		TLMessageFwdHeaderFlag Flags { get; set; }
		Int32? FromId { get; set; }
		Int32 Date { get; set; }
		Int32? ChannelId { get; set; }
		Int32? ChannelPost { get; set; }
	}
#endif

}