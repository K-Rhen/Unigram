// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLInputMediaInvoice : ITLInputMediaBase, TLInputMediaInvoice 
	{
		public bool HasPhoto { get { return Flags.HasFlag(TLInputMediaInvoiceFlag.Photo); } set { Flags = value ? (Flags | TLInputMediaInvoiceFlag.Photo) : (Flags & ~TLInputMediaInvoiceFlag.Photo); } }

		public TLInputMediaInvoiceFlag Flags { get; set; }
		public String Title { get; set; }
		public String Description { get; set; }
		public TLInputWebDocument Photo { get; set; }
		public TLInvoice Invoice { get; set; }
		public Byte[] Payload { get; set; }
		public String Provider { get; set; }
		public String StartParam { get; set; }

		public ITLInputMediaInvoice() { }
		public ITLInputMediaInvoice(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.InputMediaInvoice; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLInputMediaInvoiceFlag)from.ReadInt32();
			Title = from.ReadString();
			Description = from.ReadString();
			if (HasPhoto) Photo = TLFactory.Read<TLInputWebDocument>(from);
			Invoice = TLFactory.Read<TLInvoice>(from);
			Payload = from.ReadByteArray();
			Provider = from.ReadString();
			StartParam = from.ReadString();
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0x92153685);
			to.Write((Int32)Flags);
			to.Write(Title);
			to.Write(Description);
			if (HasPhoto) to.WriteObject(Photo);
			to.WriteObject(Invoice);
			to.WriteByteArray(Payload);
			to.Write(Provider);
			to.Write(StartParam);
		}

		private void UpdateFlags()
		{
			HasPhoto = Photo != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLInputMediaInvoiceFlag : Int32
	{
		Photo = (1 << 0),
	}
#endif

#if !PORTABLE
	[Guid(0x1fd0d7a9, 0x0616, 0x23a7, 0x35, 0x1a, 0x30, 0x0e, 0x9d, 0xb7, 0xaf, 0x84)]
	public partial interface TLInputMediaInvoice : TLInputMediaBase
	{
		bool HasPhoto { get; set; }

		TLInputMediaInvoiceFlag Flags { get; set; }
		String Title { get; set; }
		String Description { get; set; }
		TLInputWebDocument Photo { get; set; }
		TLInvoice Invoice { get; set; }
		Byte[] Payload { get; set; }
		String Provider { get; set; }
		String StartParam { get; set; }
	}
#endif

}