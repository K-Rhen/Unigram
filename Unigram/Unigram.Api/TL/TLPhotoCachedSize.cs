// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLPhotoCachedSize : ITLPhotoSizeBase, TLPhotoCachedSize 
	{
		public TLFileLocationBase Location { get; set; }
		public Int32 W { get; set; }
		public Int32 H { get; set; }
		public Byte[] Bytes { get; set; }

		public ITLPhotoCachedSize() { }
		public ITLPhotoCachedSize(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.PhotoCachedSize; } }

		public override void Read(TLBinaryReader from)
		{
			Type = from.ReadString();
			Location = TLFactory.Read<TLFileLocationBase>(from);
			W = from.ReadInt32();
			H = from.ReadInt32();
			Bytes = from.ReadByteArray();
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0xE9A734FA);
			to.Write(Type);
			to.WriteObject(Location);
			to.Write(W);
			to.Write(H);
			to.WriteByteArray(Bytes);
		}
	}

#if !PORTABLE
	[Guid(0x365c79bd, 0x40a8, 0xa833, 0xe8, 0x83, 0x5f, 0x61, 0xf0, 0xcc, 0xe4, 0x5f)]
	public partial interface TLPhotoCachedSize : TLPhotoSizeBase
	{
		String Type { get; set; }
		TLFileLocationBase Location { get; set; }
		Int32 W { get; set; }
		Int32 H { get; set; }
		Byte[] Bytes { get; set; }
	}
#endif

}