// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLMessageActionPhoneCall : ITLMessageActionBase, TLMessageActionPhoneCall 
	{
		public bool HasReason { get { return Flags.HasFlag(TLMessageActionPhoneCallFlag.Reason); } set { Flags = value ? (Flags | TLMessageActionPhoneCallFlag.Reason) : (Flags & ~TLMessageActionPhoneCallFlag.Reason); } }
		public bool HasDuration { get { return Flags.HasFlag(TLMessageActionPhoneCallFlag.Duration); } set { Flags = value ? (Flags | TLMessageActionPhoneCallFlag.Duration) : (Flags & ~TLMessageActionPhoneCallFlag.Duration); } }

		public TLMessageActionPhoneCallFlag Flags { get; set; }
		public Int64 CallId { get; set; }
		public TLPhoneCallDiscardReasonBase Reason { get; set; }
		public Int32? Duration { get; set; }

		public ITLMessageActionPhoneCall() { }
		public ITLMessageActionPhoneCall(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.MessageActionPhoneCall; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLMessageActionPhoneCallFlag)from.ReadInt32();
			CallId = from.ReadInt64();
			if (HasReason) Reason = TLFactory.Read<TLPhoneCallDiscardReasonBase>(from);
			if (HasDuration) Duration = from.ReadInt32();
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0x80E11A7F);
			to.Write((Int32)Flags);
			to.Write(CallId);
			if (HasReason) to.WriteObject(Reason);
			if (HasDuration) to.Write(Duration.Value);
		}

		private void UpdateFlags()
		{
			HasReason = Reason != null;
			HasDuration = Duration != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLMessageActionPhoneCallFlag : Int32
	{
		Reason = (1 << 0),
		Duration = (1 << 1),
	}
#endif

#if !PORTABLE
	[Guid(0xb7ad6125, 0xe49b, 0x6bc2, 0x5b, 0x0d, 0x45, 0x94, 0xee, 0x69, 0x89, 0x21)]
	public partial interface TLMessageActionPhoneCall : TLMessageActionBase
	{
		bool HasReason { get; set; }
		bool HasDuration { get; set; }

		TLMessageActionPhoneCallFlag Flags { get; set; }
		Int64 CallId { get; set; }
		TLPhoneCallDiscardReasonBase Reason { get; set; }
		Int32? Duration { get; set; }
	}
#endif

}