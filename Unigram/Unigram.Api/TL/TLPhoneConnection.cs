// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLPhoneConnection : ITLObject, TLPhoneConnection 
	{
		public Int64 Id { get; set; }
		public String Ip { get; set; }
		public String Ipv6 { get; set; }
		public Int32 Port { get; set; }
		public Byte[] PeerTag { get; set; }

		public ITLPhoneConnection() { }
		public ITLPhoneConnection(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.PhoneConnection; } }

		public override void Read(TLBinaryReader from)
		{
			Id = from.ReadInt64();
			Ip = from.ReadString();
			Ipv6 = from.ReadString();
			Port = from.ReadInt32();
			PeerTag = from.ReadByteArray();
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x9D4C17C0);
			to.Write(Id);
			to.Write(Ip);
			to.Write(Ipv6);
			to.Write(Port);
			to.WriteByteArray(PeerTag);
		}
	}

#if !PORTABLE
	[Guid(0x408614c9, 0xd74b, 0x8af6, 0x2d, 0x6c, 0xba, 0xad, 0xeb, 0x78, 0x0a, 0x9a)]
	public partial interface TLPhoneConnection : TLObject
	{
		Int64 Id { get; set; }
		String Ip { get; set; }
		String Ipv6 { get; set; }
		Int32 Port { get; set; }
		Byte[] PeerTag { get; set; }
	}
#endif

}