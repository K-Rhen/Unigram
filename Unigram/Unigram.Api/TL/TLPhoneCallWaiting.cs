// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLPhoneCallWaiting : ITLPhoneCallBase, TLPhoneCallWaiting 
	{
		public bool HasReceiveDate { get { return Flags.HasFlag(TLPhoneCallWaitingFlag.ReceiveDate); } set { Flags = value ? (Flags | TLPhoneCallWaitingFlag.ReceiveDate) : (Flags & ~TLPhoneCallWaitingFlag.ReceiveDate); } }

		public TLPhoneCallWaitingFlag Flags { get; set; }
		public Int64 AccessHash { get; set; }
		public Int32 Date { get; set; }
		public Int32 AdminId { get; set; }
		public Int32 ParticipantId { get; set; }
		public TLPhoneCallProtocol Protocol { get; set; }
		public Int32? ReceiveDate { get; set; }

		public ITLPhoneCallWaiting() { }
		public ITLPhoneCallWaiting(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.PhoneCallWaiting; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLPhoneCallWaitingFlag)from.ReadInt32();
			Id = from.ReadInt64();
			AccessHash = from.ReadInt64();
			Date = from.ReadInt32();
			AdminId = from.ReadInt32();
			ParticipantId = from.ReadInt32();
			Protocol = TLFactory.Read<TLPhoneCallProtocol>(from);
			if (HasReceiveDate) ReceiveDate = from.ReadInt32();
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0x1B8F4AD1);
			to.Write((Int32)Flags);
			to.Write(Id);
			to.Write(AccessHash);
			to.Write(Date);
			to.Write(AdminId);
			to.Write(ParticipantId);
			to.WriteObject(Protocol);
			if (HasReceiveDate) to.Write(ReceiveDate.Value);
		}

		private void UpdateFlags()
		{
			HasReceiveDate = ReceiveDate != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLPhoneCallWaitingFlag : Int32
	{
		ReceiveDate = (1 << 0),
	}
#endif

#if !PORTABLE
	[Guid(0x8aab306d, 0x4218, 0x45d3, 0x35, 0x19, 0x67, 0x9a, 0xea, 0x50, 0xa9, 0x1a)]
	public partial interface TLPhoneCallWaiting : TLPhoneCallBase
	{
		bool HasReceiveDate { get; set; }

		TLPhoneCallWaitingFlag Flags { get; set; }
		Int64 Id { get; set; }
		Int64 AccessHash { get; set; }
		Int32 Date { get; set; }
		Int32 AdminId { get; set; }
		Int32 ParticipantId { get; set; }
		TLPhoneCallProtocol Protocol { get; set; }
		Int32? ReceiveDate { get; set; }
	}
#endif

}