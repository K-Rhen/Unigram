// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLGame : ITLObject, TLGame 
	{
		public bool HasDocument { get { return Flags.HasFlag(TLGameFlag.Document); } set { Flags = value ? (Flags | TLGameFlag.Document) : (Flags & ~TLGameFlag.Document); } }

		public TLGameFlag Flags { get; set; }
		public Int64 Id { get; set; }
		public Int64 AccessHash { get; set; }
		public String ShortName { get; set; }
		public String Title { get; set; }
		public String Description { get; set; }
		public TLPhotoBase Photo { get; set; }
		public TLDocumentBase Document { get; set; }

		public ITLGame() { }
		public ITLGame(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.Game; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLGameFlag)from.ReadInt32();
			Id = from.ReadInt64();
			AccessHash = from.ReadInt64();
			ShortName = from.ReadString();
			Title = from.ReadString();
			Description = from.ReadString();
			Photo = TLFactory.Read<TLPhotoBase>(from);
			if (HasDocument) Document = TLFactory.Read<TLDocumentBase>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0xBDF9653B);
			to.Write((Int32)Flags);
			to.Write(Id);
			to.Write(AccessHash);
			to.Write(ShortName);
			to.Write(Title);
			to.Write(Description);
			to.WriteObject(Photo);
			if (HasDocument) to.WriteObject(Document);
		}

		private void UpdateFlags()
		{
			HasDocument = Document != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLGameFlag : Int32
	{
		Document = (1 << 0),
	}
#endif

#if !PORTABLE
	[Guid(0x346dd4c8, 0xea1b, 0xd54f, 0xbf, 0xf8, 0x66, 0xa6, 0x5f, 0xf8, 0xae, 0xa9)]
	public partial interface TLGame : TLObject
	{
		bool HasDocument { get; set; }

		TLGameFlag Flags { get; set; }
		Int64 Id { get; set; }
		Int64 AccessHash { get; set; }
		String ShortName { get; set; }
		String Title { get; set; }
		String Description { get; set; }
		TLPhotoBase Photo { get; set; }
		TLDocumentBase Document { get; set; }
	}
#endif

}