// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLInputMediaUploadedDocument : ITLInputMediaBase, TLInputMediaUploadedDocument, ITLMessageMediaCaption 
	{
		public bool HasStickers { get { return Flags.HasFlag(TLInputMediaUploadedDocumentFlag.Stickers); } set { Flags = value ? (Flags | TLInputMediaUploadedDocumentFlag.Stickers) : (Flags & ~TLInputMediaUploadedDocumentFlag.Stickers); } }

		public TLInputMediaUploadedDocumentFlag Flags { get; set; }
		public TLInputFileBase File { get; set; }
		public String MimeType { get; set; }
		public TLVector<TLDocumentAttributeBase> Attributes { get; set; }
		public String Caption { get; set; }
		public TLVector<TLInputDocumentBase> Stickers { get; set; }

		public ITLInputMediaUploadedDocument() { }
		public ITLInputMediaUploadedDocument(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.InputMediaUploadedDocument; } }

		public override void Read(TLBinaryReader from)
		{
			Flags = (TLInputMediaUploadedDocumentFlag)from.ReadInt32();
			File = TLFactory.Read<TLInputFileBase>(from);
			MimeType = from.ReadString();
			Attributes = TLFactory.Read<TLVector<TLDocumentAttributeBase>>(from);
			Caption = from.ReadString();
			if (HasStickers) Stickers = TLFactory.Read<TLVector<TLInputDocumentBase>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			UpdateFlags();

			to.Write(0xD070F1E9);
			to.Write((Int32)Flags);
			to.WriteObject(File);
			to.Write(MimeType);
			to.WriteObject(Attributes);
			to.Write(Caption);
			if (HasStickers) to.WriteObject(Stickers);
		}

		private void UpdateFlags()
		{
			HasStickers = Stickers != null;
		}
	}

#if !PORTABLE
	[Flags]
	public enum TLInputMediaUploadedDocumentFlag : Int32
	{
		Stickers = (1 << 0),
	}
#endif

#if !PORTABLE
	[Guid(0x1fd0d7a9, 0x0616, 0x23a7, 0x35, 0x1a, 0x30, 0x0e, 0x9d, 0xb7, 0xaf, 0x84)]
	public partial interface TLInputMediaUploadedDocument : TLInputMediaBase
	{
		bool HasStickers { get; set; }

		TLInputMediaUploadedDocumentFlag Flags { get; set; }
		TLInputFileBase File { get; set; }
		String MimeType { get; set; }
		TLVector<TLDocumentAttributeBase> Attributes { get; set; }
		String Caption { get; set; }
		TLVector<TLInputDocumentBase> Stickers { get; set; }
	}
#endif

}