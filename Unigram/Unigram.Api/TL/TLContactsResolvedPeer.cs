// <auto-generated/>
using System;
using Windows.Foundation.Metadata;

namespace Telegram.Api.TL
{
#if !PORTABLE
	internal
#else
	public
#endif
	partial class ITLContactsResolvedPeer : ITLObject, TLContactsResolvedPeer 
	{
		public TLPeerBase Peer { get; set; }
		public TLVector<TLChatBase> Chats { get; set; }
		public TLVector<TLUserBase> Users { get; set; }

		public ITLContactsResolvedPeer() { }
		public ITLContactsResolvedPeer(TLBinaryReader from)
		{
			Read(from);
		}

		public override TLType TypeId { get { return TLType.ContactsResolvedPeer; } }

		public override void Read(TLBinaryReader from)
		{
			Peer = TLFactory.Read<TLPeerBase>(from);
			Chats = TLFactory.Read<TLVector<TLChatBase>>(from);
			Users = TLFactory.Read<TLVector<TLUserBase>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x7F077AD9);
			to.WriteObject(Peer);
			to.WriteObject(Chats);
			to.WriteObject(Users);
		}
	}

#if !PORTABLE
	[Guid(0x562aff5e, 0x454a, 0xa15b, 0x28, 0x7c, 0x96, 0x53, 0x63, 0xc1, 0x51, 0x33)]
	public partial interface TLContactsResolvedPeer : TLObject
	{
		TLPeerBase Peer { get; set; }
		TLVector<TLChatBase> Chats { get; set; }
		TLVector<TLUserBase> Users { get; set; }
	}
#endif

}